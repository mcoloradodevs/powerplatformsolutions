{"swagger":"2.0","info":{"version":"1.17.16","title":"Google Maps Platform","description":"API Specification for Google Maps Platform","contact":{}},"host":"maps.googleapis.com","basePath":"/","schemes":["https"],"consumes":["application/json"],"produces":["application/json"],"paths":{"/maps/api/place/details/json":{"get":{"description":"The Places API is a service that returns information about places using HTTP requests. Places are defined within this API as establishments, geographic locations, or prominent points of interest.","summary":"placeDetails","tags":["Places API"],"operationId":"placeDetails","deprecated":false,"produces":["application/json"],"parameters":[{"name":"place_id","in":"query","required":true,"type":"string","description":"A textual identifier that uniquely identifies a place, returned from a [Place Search](https://developers.google.com/maps/documentation/places/web-service/search).\nFor more information about place IDs, see the [place ID overview](https://developers.google.com/maps/documentation/places/web-service/place-id)."},{"name":"fields","in":"query","required":false,"type":"array","minItems":1,"uniqueItems":false,"items":{"type":"string"},"description":"<div class=\"caution\"> Caution: Place Search requests and Place Details requests do not return the same fields. Place Search requests return a subset of the fields that are returned by Place Details requests. If the field you want is not returned by Place Search, you can use Place Search to get a <code>place_id</code>, then use that Place ID to make a Place Details request. For more information on the fields that are unavailable in a Place Search request, see <a href=\"https://developers.google.com/maps/documentation/places/web-service/place-data-fields#places-api-fields-support\">Places API fields support</a>.</div>\n\nUse the fields parameter to specify a comma-separated list of place data types to return. For example: `fields=formatted_address,name,geometry`. Use a forward slash when specifying compound values. For example: `opening_hours/open_now`.\n\nFields are divided into three billing categories: Basic, Contact, and Atmosphere. Basic fields are billed at base rate, and incur no additional charges. Contact and Atmosphere fields are billed at a higher rate. See the [pricing sheet](https://cloud.google.com/maps-platform/pricing/sheet/) for more information. Attributions, `html_attributions`, are always returned with every call, regardless of whether the field has been requested.\n\n**Basic**\n\nThe Basic category includes the following fields: `address_component`, `adr_address`, `business_status`, `formatted_address`, `geometry`, `icon`, `icon_mask_base_uri`, `icon_background_color`, `name`, `permanently_closed` ([deprecated](https://developers.google.com/maps/deprecations)), `photo`, `place_id`, `plus_code`, `type`, `url`, `utc_offset`, `vicinity`.\n\n**Contact**\n\nThe Contact category includes the following fields: `formatted_phone_number`, `international_phone_number`, `opening_hours`, `website`\n\n**Atmosphere**\n\nThe Atmosphere category includes the following fields: `price_level`, `rating`, `review`, `user_ratings_total`."},{"name":"sessiontoken","in":"query","required":false,"type":"string","description":"A random string which identifies an autocomplete [session](https://developers.google.com/maps/documentation/places/web-service/details#session_tokens) for billing purposes.\n\nThe session begins when the user starts typing a query, and concludes when they select a place and a call to Place Details is made. Each session can have multiple queries, followed by one place selection. The API key(s) used for each request within a session must belong to the same Google Cloud Console project. Once a session has concluded, the token is no longer valid; your app must generate a fresh token for each session. If the `sessiontoken` parameter is omitted, or if you reuse a session token, the session is charged as if no session token was provided (each request is billed separately).\n\nWe recommend the following guidelines:\n\n- Use session tokens for all autocomplete sessions.\n- Generate a fresh token for each session. Using a version 4 UUID is recommended.\n- Ensure that the API key(s) used for all Place Autocomplete and Place Details requests within a session belong to the same Cloud Console project.\n- Be sure to pass a unique session token for each new session. Using the same token for more than one session will result in each request being billed individually."},{"name":"language","in":"query","required":false,"enum":["ar","bg","bn","ca","cs","da","de","el","en","en-AU","en-GB","es","eu","fa","fi","fil","fr","gl","gu","hi","hr","hu","id","it","iw","ja","kn","ko","lt","lv","ml","mr","nl","no","pl","pt","pt-BR","pt-PT","ro","ru","sk","sl","sr","sv","ta","te","th","tl","tr","uk","vi","zh-CN","zh-TW"],"default":"en","type":"string","description":"The language in which to return results.\n\n* See the [list of supported languages](https://developers.google.com/maps/faq#languagesupport). Google often updates the supported languages, so this list may not be exhaustive.\n* If `language` is not supplied, the API attempts to use the preferred language as specified in the `Accept-Language` header.\n* The API does its best to provide a street address that is readable for both the user and locals. To achieve that goal, it returns street addresses in the local language, transliterated to a script readable by the user if necessary, observing the preferred language. All other addresses are returned in the preferred language. Address components are all returned in the same language, which is chosen from the first component.\n* If a name is not available in the preferred language, the API uses the closest match.\n* The preferred language has a small influence on the set of results that the API chooses to return, and the order in which they are returned. The geocoder interprets abbreviations differently depending on language, such as the abbreviations for street types, or synonyms that may be valid in one language but not in another. For example, _utca_ and _t√©r_ are synonyms for street in Hungarian."},{"name":"region","in":"query","required":false,"enum":["ac","ad","ae","af","ag","ai","al","am","an","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bl","bm","bn","bo","bq","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","en","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mf","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tp","tr","tt","tv","tw","tz","ua","ug","uk","um","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"],"default":"en","type":"string","description":"The region code, specified as a [ccTLD (\"top-level domain\")](https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#Country_code_top-level_domains) two-character value. Most ccTLD codes are identical to ISO 3166-1 codes, with some notable exceptions. For example, the United Kingdom's ccTLD is \"uk\" (.co.uk) while its ISO 3166-1 code is \"gb\" (technically for the entity of \"The United Kingdom of Great Britain and Northern Ireland\")."}],"responses":{"200":{"description":"200 OK","schema":{"$ref":"#/definitions/PlacesDetailsResponse"},"examples":{"application/json":{"html_attributions":[],"result":{"address_components":[{"long_name":"48","short_name":"48","types":["street_number"]},{"long_name":"Pirrama Road","short_name":"Pirrama Rd","types":["route"]},{"long_name":"Pyrmont","short_name":"Pyrmont","types":["locality","political"]},{"long_name":"City of Sydney","short_name":"City of Sydney","types":["administrative_area_level_2","political"]},{"long_name":"New South Wales","short_name":"NSW","types":["administrative_area_level_1","political"]},{"long_name":"Australia","short_name":"AU","types":["country","political"]},{"long_name":"2009","short_name":"2009","types":["postal_code"]}],"adr_address":"<span class=\"street-address\">48 Pirrama Rd</span>, <span class=\"locality\">Pyrmont</span> <span class=\"region\">NSW</span> <span class=\"postal-code\">2009</span>, <span class=\"country-name\">Australia</span>","business_status":"OPERATIONAL","formatted_address":"48 Pirrama Rd, Pyrmont NSW 2009, Australia","formatted_phone_number":"(02) 9374 4000","geometry":{"location":{"lat":-33.866489,"lng":151.1958561},"viewport":{"northeast":{"lat":-33.8655112697085,"lng":151.1971156302915},"southwest":{"lat":-33.86820923029149,"lng":151.1944176697085}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#7B9EB0","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","international_phone_number":"+61 2 9374 4000","name":"Google Workplace 6","opening_hours":{"open_now":false,"periods":[{"close":{"day":1,"time":"1700"},"open":{"day":1,"time":"0900"}},{"close":{"day":2,"time":"1700"},"open":{"day":2,"time":"0900"}},{"close":{"day":3,"time":"1700"},"open":{"day":3,"time":"0900"}},{"close":{"day":4,"time":"1700"},"open":{"day":4,"time":"0900"}},{"close":{"day":5,"time":"1700"},"open":{"day":5,"time":"0900"}}],"weekday_text":["Monday: 9:00 AM ‚Äì 5:00 PM","Tuesday: 9:00 AM ‚Äì 5:00 PM","Wednesday: 9:00 AM ‚Äì 5:00 PM","Thursday: 9:00 AM ‚Äì 5:00 PM","Friday: 9:00 AM ‚Äì 5:00 PM","Saturday: Closed","Sunday: Closed"]},"photos":[{"height":3024,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/117600448889234589608\">Cynthia Wei</a>"],"photo_reference":"Aap_uEC6jqtpflLS8GxQqPHBjlcwBf2sri0ZErk9q1ciHGZ6Zx5HBiiiEsPEO3emtB1PGyWbBQhgPL2r9CshoVlJEG4xzB71QMhGBTqqeaCNk1quO3vTTiP50aM1kmOaBQ-DF1ER7zpu6BQOEtnusKMul0m4KA45wfE3h6Xh2IxjLNzx-IiX","width":4032},{"height":3264,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/102493344958625549078\">Heyang Li</a>"],"photo_reference":"Aap_uECyRjHhOQgGaKTW6Z3ZfTEaDhNc44m0F6GrNSFIMffixwI5xqD35QhecdzVY-FUuDtVE1huu8-2HkxgI9Gwvy6W18fU-_E3UUkdSFBQqGK8_slKlT8BZZc66sTX53IEcTDrZfT-E5_YUBYBOm13yxOTOfWfEDABhaxCGC5Hu_XYh0fI","width":4912},{"height":3036,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/104829437842034782235\">Anna Linetsky</a>"],"photo_reference":"Aap_uEAumTzSdhRHDutPAj6wVPSZZmBV-brI6TPFwI0tcQlbSR74z44mUPr4aXMQKck_AzHaKmbfR3P2c1qsu45i1RQPHrcpIXxrA78FmDjCdWYYZWUnFozdcmEj9OQ_V0G08adpKivMKZyeaQ1NuwRy9GhSopeKpzkzkFZG5vXMYPPSgpa1","width":4048},{"height":4016,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/107755640736541028674\">Jonah Dell</a>"],"photo_reference":"Aap_uECC7cSbDkh-TdmXr6m5d5pgVXJmvXg8dF2jzhL0b0Ko4CtnVll6-tIvdz7vhbCsd3hl2u9EgZ4Y30FBxKmFcimfeYUgW2XJyv8JY5IYGuXsKkCLqpV3QH9dIGwoUv2uX0eosDsUsTN2DOlyOasUgVxcYqzIzEmrL5ofIssThQWZeozD","width":6016},{"height":3024,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/115886271727815775491\">Anthony Huynh</a>"],"photo_reference":"Aap_uEDTdw58CglFmZZAR9iZ05x3y2oK9r5_dRqKWnbZKSS9gs6gp9AeBa1QDvBL6dzZyQAZfN8H2Eppu6y4NBaPOp-GkulZYiKRM7Yww8sUEv-8dmcq35Tx38pe4LEX2wIicFkQHedRgMc0FfV9aFtgosQ5ps5-HCjJSApg8eLGyuxxqPm9","width":4032},{"height":3024,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/102939237947063969663\">Jasen Baker</a>"],"photo_reference":"Aap_uEAGqslqZPhZUk0T2Y6l7mkCYnY7JN9li4g5NkZsE0N4Cdy7_cZ-fZWyV02VhpQR4Ph4fLUL6_WTXrlGMXXzUJXUcSmSTs2d_Dzf3Q_A1y07Dm-vtv7pS3JXsWyrWETGIoT1pIj81PPdUc1vlR2i3GFMWAbx9rCC472ZJclY8JlvMg-x","width":4032},{"height":3024,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/100678816592586275978\">Jeremy Hsiao</a>"],"photo_reference":"Aap_uEBaGxeN90YFjD-AUjxZqM44kpMcICKKBBhb0RQQS7DHHFaay8RRAwjWsAt8GEmmB5QnxrbQWHU3TwhVXXHP0m-YNp9Ds3ihpiFan0moNv4QB7kern5cfjWhhrWe8B0dz_vYvmPssJE24P-24YfWWHubOo0L2MjQyueZfDv57N_RvDZk","width":4032},{"height":1515,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/112343109286948028063\">Andrew W</a>"],"photo_reference":"Aap_uEBDzJlmTeNUreMop6_hkC1HKTCRLyPs5fikJi58qCejtkWp5PIM6vzNN3HErkSWUwnamTr_WLyT7jXMAIdByR-hx8dG-OHjj5JxzmcPvuT_VeVLmdSbNPeIlpmp6EUcPOhaVrhEKojSd44QXkl0za29eZ0oj1KDOnAsGxmhanDFW7lI","width":2048},{"height":3024,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/100678816592586275978\">Jeremy Hsiao</a>"],"photo_reference":"Aap_uEBvYFpzCDQzvQ0kdBxxB70lTkLbTM0yH3xF-BCHsb7DQ63cuWnutvwv8oVLDSbA14_kns3WVlEInTyy2elvmH5lzQteb6zzRu3exkwE65_55TgJqdLO7RYYiPFliWk4ocszn9nn5ELv5uP2BQmqr9QET5vwgxR-0eshyVmcdM42jb39","width":4032},{"height":4032,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/100678816592586275978\">Jeremy Hsiao</a>"],"photo_reference":"Aap_uECQynuD_EnSnbz8sJQ6-B6uR-j2tuu4Z1tuGUjq8xnxFDk-W8OdeLzWBX8suNKTCsPlkzTqC22BXf_hX33XclGPL4SS9xnPmHcMrLoUl0H_xHYevFvT17Hgw5DZpSyVmLvDvxzzJ1rsZTh55QwopmAty083a1r1ZIfL32iXh_q8FUas","width":3024}],"place_id":"ChIJN1t_tDeuEmsRUsoyG83frY4","plus_code":{"compound_code":"45MW+C8 Pyrmont NSW, Australia","global_code":"4RRH45MW+C8"},"rating":4,"reference":"ChIJN1t_tDeuEmsRUsoyG83frY4","reviews":[{"author_name":"Luke Archibald","author_url":"https://www.google.com/maps/contrib/113389359827989670652/reviews","language":"en","profile_photo_url":"https://lh3.googleusercontent.com/a-/AOh14GhGGmTmvtD34HiRgwHdXVJUTzVbxpsk5_JnNKM5MA=s128-c0x00000000-cc-rp-mo","rating":1,"relative_time_description":"a week ago","text":"Called regarding paid advertising google pages to the top of its site of a scam furniture website misleading and taking peoples money without ever sending a product - explained the situation,  explained I'd spoken to an ombudsman regarding it.  Listed ticket numbers etc.\n\nThey left the advertisement running.","time":1652286798},{"author_name":"Tevita Taufoou","author_url":"https://www.google.com/maps/contrib/105937236918123663309/reviews","language":"en","profile_photo_url":"https://lh3.googleusercontent.com/a/AATXAJwZANdRSSg96QeZG--6BazG5uv_BJMIvpZGqwSz=s128-c0x00000000-cc-rp-mo","rating":1,"relative_time_description":"6 months ago","text":"I need help.  Google Australia is taking my money. Money I don't have any I am having trouble sorting this issue out","time":1637215605},{"author_name":"Jordy Baker","author_url":"https://www.google.com/maps/contrib/102582237417399865640/reviews","language":"en","profile_photo_url":"https://lh3.googleusercontent.com/a/AATXAJwgg1tM4aVA4nJCMjlfJtHtFZuxF475Vb6tT74S=s128-c0x00000000-cc-rp-mo","rating":1,"relative_time_description":"4 months ago","text":"I have literally never been here in my life, I am 17 and they are taking money I don't have for no reason.\n\nThis is not ok. I have rent to pay and my own expenses to deal with and now this.","time":1641389490},{"author_name":"Prem Rathod","author_url":"https://www.google.com/maps/contrib/115981614018592114142/reviews","language":"en","profile_photo_url":"https://lh3.googleusercontent.com/a/AATXAJyEQpqs4YvPPzMPG2dnnRTFPC4jxJfn8YXnm2gz=s128-c0x00000000-cc-rp-mo","rating":1,"relative_time_description":"4 months ago","text":"Terrible service. all reviews are fake and irrelevant. This is about reviewing google as business not the building/staff etc.","time":1640159655},{"author_name":"Husuni Hamza","author_url":"https://www.google.com/maps/contrib/102167316656574288776/reviews","language":"en","profile_photo_url":"https://lh3.googleusercontent.com/a/AATXAJwRkyvoSlgd06ahkF9XI9D39o6Zc_Oycm5EKuRg=s128-c0x00000000-cc-rp-mo","rating":5,"relative_time_description":"7 months ago","text":"Nice site. Please I want to work with you. Am Alhassan Haruna, from Ghana. Contact me +233553851616","time":1633197305}],"types":["point_of_interest","establishment"],"url":"https://maps.google.com/?cid=10281119596374313554","user_ratings_total":939,"utc_offset":600,"vicinity":"48 Pirrama Road, Pyrmont","website":"http://google.com/"},"status":"OK"}},"headers":{}}}}},"/maps/api/place/findplacefromtext/json":{"get":{"description":"A Find Place request takes a text input and returns a place. The input can be any kind of Places text data, such as a name, address, or phone number. The request must be a string. A Find Place request using non-string data such as a lat/lng coordinate or plus code generates an error.\n<div class=\"note\">Note: If you omit the fields parameter from a Find Place request, only the place_id for the result will be returned.</div>\n","summary":"findPlaceFromText","tags":["Places API"],"operationId":"findPlaceFromText","deprecated":false,"produces":["application/json"],"parameters":[{"name":"fields","in":"query","required":false,"type":"array","minItems":1,"uniqueItems":false,"items":{"type":"string"},"description":"<div class=\"caution\"> Caution: Place Search requests and Place Details requests do not return the same fields. Place Search requests return a subset of the fields that are returned by Place Details requests. If the field you want is not returned by Place Search, you can use Place Search to get a <code>place_id</code>, then use that Place ID to make a Place Details request. For more information on the fields that are unavailable in a Place Search request, see <a href=\"https://developers.google.com/maps/documentation/places/web-service/place-data-fields#places-api-fields-support\">Places API fields support</a>.</div>\n\nUse the fields parameter to specify a comma-separated list of place data types to return. For example: `fields=formatted_address,name,geometry`. Use a forward slash when specifying compound values. For example: `opening_hours/open_now`.\n\nFields are divided into three billing categories: Basic, Contact, and Atmosphere. Basic fields are billed at base rate, and incur no additional charges. Contact and Atmosphere fields are billed at a higher rate. See the [pricing sheet](https://cloud.google.com/maps-platform/pricing/sheet/) for more information. Attributions, `html_attributions`, are always returned with every call, regardless of whether the field has been requested.\n\n**Basic**\n\nThe Basic category includes the following fields: `address_component`, `adr_address`, `business_status`, `formatted_address`, `geometry`, `icon`, `icon_mask_base_uri`, `icon_background_color`, `name`, `permanently_closed` ([deprecated](https://developers.google.com/maps/deprecations)), `photo`, `place_id`, `plus_code`, `type`, `url`, `utc_offset`, `vicinity`.\n\n**Contact**\n\nThe Contact category includes the following fields: `formatted_phone_number`, `international_phone_number`, `opening_hours`, `website`\n\n**Atmosphere**\n\nThe Atmosphere category includes the following fields: `price_level`, `rating`, `review`, `user_ratings_total`."},{"name":"input","in":"query","required":true,"type":"string","description":"The text string on which to search, for example: \"restaurant\" or \"123 Main Street\". This must be a place name, address, or category of establishments. Any other types of input can generate errors\nand are not guaranteed to return valid results. The Places API will return candidate matches based on this string and order the results based on their perceived relevance."},{"name":"inputtype","in":"query","required":true,"enum":["textquery","phonenumber"],"type":"string","description":"The type of input. This can be one of either `textquery` or `phonenumber`. Phone numbers must be in international format (prefixed by a plus sign (\"+\"), followed by the country code, then the phone number itself). See [E.164 ITU recommendation](https://en.wikipedia.org/wiki/E.164) for more information."},{"name":"locationbias","in":"query","required":false,"type":"string","description":"Prefer results in a specified area, by specifying either a radius plus lat/lng, or two lat/lng pairs representing the points of a rectangle. If this parameter is not specified, the API uses IP address biasing by default.\n- IP bias: Instructs the API to use IP address biasing. Pass the string `ipbias` (this option has no additional parameters).\n- Point: A single lat/lng coordinate. Use the following format: `point:lat,lng`.\n- Circular: A string specifying radius in meters, plus lat/lng in decimal degrees. Use the following format: `circle:radius@lat,lng`.\n- Rectangular: A string specifying two lat/lng pairs in decimal degrees, representing the south/west and north/east points of a rectangle. Use the following format:`rectangle:south,west|north,east`. Note that east/west values are wrapped to the range -180, 180, and north/south values are clamped to the range -90, 90."},{"name":"language","in":"query","required":false,"enum":["ar","bg","bn","ca","cs","da","de","el","en","en-AU","en-GB","es","eu","fa","fi","fil","fr","gl","gu","hi","hr","hu","id","it","iw","ja","kn","ko","lt","lv","ml","mr","nl","no","pl","pt","pt-BR","pt-PT","ro","ru","sk","sl","sr","sv","ta","te","th","tl","tr","uk","vi","zh-CN","zh-TW"],"default":"en","type":"string","description":"The language in which to return results.\n\n* See the [list of supported languages](https://developers.google.com/maps/faq#languagesupport). Google often updates the supported languages, so this list may not be exhaustive.\n* If `language` is not supplied, the API attempts to use the preferred language as specified in the `Accept-Language` header.\n* The API does its best to provide a street address that is readable for both the user and locals. To achieve that goal, it returns street addresses in the local language, transliterated to a script readable by the user if necessary, observing the preferred language. All other addresses are returned in the preferred language. Address components are all returned in the same language, which is chosen from the first component.\n* If a name is not available in the preferred language, the API uses the closest match.\n* The preferred language has a small influence on the set of results that the API chooses to return, and the order in which they are returned. The geocoder interprets abbreviations differently depending on language, such as the abbreviations for street types, or synonyms that may be valid in one language but not in another. For example, _utca_ and _t√©r_ are synonyms for street in Hungarian."}],"responses":{"200":{"description":"200 OK","schema":{"$ref":"#/definitions/PlacesFindPlaceFromTextResponse"},"examples":{"application/json":{"candidates":[{"formatted_address":"140 George St, The Rocks NSW 2000, Australia","geometry":{"location":{"lat":-33.8599358,"lng":151.2090295},"viewport":{"northeast":{"lat":-33.85824377010728,"lng":151.2104386798927},"southwest":{"lat":-33.86094342989272,"lng":151.2077390201073}}},"name":"Museum of Contemporary Art Australia","opening_hours":{"open_now":false},"rating":4.4}],"status":"OK"}},"headers":{}}}}},"/maps/api/place/nearbysearch/json":{"get":{"description":"A Nearby Search lets you search for places within a specified area. You can refine your search request by supplying keywords or specifying the type of place you are searching for.","summary":"nearbySearch","tags":["Places API"],"operationId":"nearbySearch","deprecated":false,"produces":["application/json"],"parameters":[{"name":"keyword","in":"query","required":false,"type":"string","description":"The text string on which to search, for example: \"restaurant\" or \"123 Main Street\". This must be a place name, address, or category of establishments.\nAny other types of input can generate errors and are not guaranteed to return valid results. The Google Places service will return candidate matches\nbased on this string and order the results based on their perceived relevance.\n\nExplicitly including location information using this parameter may conflict with the location, radius, and rankby parameters, causing unexpected results.\n\nIf this parameter is omitted, places with a business_status of CLOSED_TEMPORARILY or CLOSED_PERMANENTLY will not be returned."},{"name":"location","in":"query","required":true,"type":"string","description":"The point around which to retrieve place information. This must be specified as `latitude,longitude`."},{"name":"maxprice","in":"query","required":false,"enum":["0","1","2","3","4"],"type":"string","description":"Restricts results to only those places within the specified range. Valid values range between 0 (most affordable) to 4 (most expensive), inclusive. The exact amount indicated by a specific value will vary from region to region."},{"name":"minprice","in":"query","required":false,"enum":["0","1","2","3","4"],"type":"string","description":"Restricts results to only those places within the specified range. Valid values range between 0 (most affordable) to 4 (most expensive), inclusive. The exact amount indicated by a specific value will vary from region to region."},{"name":"name","in":"query","required":false,"type":"string","description":"Equivalent to `keyword`. Values in this field are combined with values in the `keyword` field and passed as part of the same search string."},{"name":"opennow","in":"query","required":false,"type":"boolean","description":"Returns only those places that are open for business at the time the query is sent. Places that do not specify opening hours in the Google Places database will not be returned if you include this parameter in your query."},{"name":"pagetoken","in":"query","required":false,"type":"string","description":"Returns up to 20 results from a previously run search. Setting a `pagetoken` parameter will execute a search with the same parameters used previously ‚Äî all parameters other than pagetoken will be ignored."},{"name":"rankby","in":"query","required":false,"enum":["prominence","distance"],"type":"string","description":"Specifies the order in which results are listed. Possible values are:\n- `prominence` (default). This option sorts results based on their importance. Ranking will favor prominent places within the set radius over nearby places that match but that are less prominent. Prominence can be affected by a place's ranking in Google's index, global popularity, and other factors. When prominence is specified, the `radius` parameter is required.\n- `distance`. This option biases search results in ascending order by their distance from the specified location. When `distance` is specified, one or more of `keyword`, `name`, or `type` is required and `radius` is disallowed."},{"name":"radius","in":"query","required":false,"type":"number","format":"double","description":"Defines the distance (in meters) within which to return place results. You may bias results to a specified circle by passing a `location` and a `radius` parameter. Doing so instructs the Places service to _prefer_ showing results within that circle; results outside of the defined area may still be displayed.\n\nThe radius will automatically be clamped to a maximum value depending on the type of search and other parameters.\n\n* Autocomplete: 50,000 meters\n* Nearby Search: \n  * with `keyword` or `name`: 50,000 meters\n  * without `keyword` or `name`\n    * Up to 50,000 meters, adjusted dynamically based on area density, independent of `rankby` parameter.\n    * When using `rankby=distance`, the radius parameter will not be accepted, and will result in an `INVALID_REQUEST`.\n* Query Autocomplete: 50,000 meters\n* Text Search: 50,000 meters"},{"name":"type","in":"query","required":false,"type":"string","description":"Restricts the results to places matching the specified type. Only one type may be specified. If more than one type is provided, all types following the first entry are ignored.\n\n* `type=hospital|pharmacy|doctor` becomes `type=hospital`\n* `type=hospital,pharmacy,doctor` is ignored entirely\n\nSee the list of [supported types](https://developers.google.com/maps/documentation/places/web-service/supported_types).\n<div class=\"note\">Note: Adding both `keyword` and `type` with the same value (`keyword=cafe&type=cafe` or `keyword=parking&type=parking`) can yield `ZERO_RESULTS`.</div>"},{"name":"language","in":"query","required":false,"enum":["ar","bg","bn","ca","cs","da","de","el","en","en-AU","en-GB","es","eu","fa","fi","fil","fr","gl","gu","hi","hr","hu","id","it","iw","ja","kn","ko","lt","lv","ml","mr","nl","no","pl","pt","pt-BR","pt-PT","ro","ru","sk","sl","sr","sv","ta","te","th","tl","tr","uk","vi","zh-CN","zh-TW"],"default":"en","type":"string","description":"The language in which to return results.\n\n* See the [list of supported languages](https://developers.google.com/maps/faq#languagesupport). Google often updates the supported languages, so this list may not be exhaustive.\n* If `language` is not supplied, the API attempts to use the preferred language as specified in the `Accept-Language` header.\n* The API does its best to provide a street address that is readable for both the user and locals. To achieve that goal, it returns street addresses in the local language, transliterated to a script readable by the user if necessary, observing the preferred language. All other addresses are returned in the preferred language. Address components are all returned in the same language, which is chosen from the first component.\n* If a name is not available in the preferred language, the API uses the closest match.\n* The preferred language has a small influence on the set of results that the API chooses to return, and the order in which they are returned. The geocoder interprets abbreviations differently depending on language, such as the abbreviations for street types, or synonyms that may be valid in one language but not in another. For example, _utca_ and _t√©r_ are synonyms for street in Hungarian."}],"responses":{"200":{"description":"200 OK","schema":{"$ref":"#/definitions/PlacesNearbySearchResponse"},"examples":{"application/json":{"html_attributions":[],"results":[{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8587323,"lng":151.2100055},"viewport":{"northeast":{"lat":-33.85739847010727,"lng":151.2112436298927},"southwest":{"lat":-33.86009812989271,"lng":151.2085439701072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/bar-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/bar_pinlet","name":"Cruise Bar","opening_hours":{"open_now":false},"photos":[{"height":608,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/112582655193348962755\">A Google User</a>"],"photo_reference":"Aap_uECvJIZuXT-uLDYm4DPbrV7gXVPeplbTWUgcOJ6rnfc4bUYCEAwPU_AmXGIaj0PDhWPbmrjQC8hhuXRJQjnA1-iREGEn7I0ZneHg5OP1mDT7lYVpa1hUPoz7cn8iCGBN9MynjOPSUe-UooRrFw2XEXOLgRJ-uKr6tGQUp77CWVocpcoG","width":1080}],"place_id":"ChIJi6C1MxquEmsR9-c-3O48ykI","plus_code":{"compound_code":"46R6+G2 The Rocks, New South Wales","global_code":"4RRH46R6+G2"},"price_level":2,"rating":4,"reference":"ChIJi6C1MxquEmsR9-c-3O48ykI","scope":"GOOGLE","types":["bar","restaurant","food","point_of_interest","establishment"],"user_ratings_total":1269,"vicinity":"Level 1, 2 and 3, Overseas Passenger Terminal, Circular Quay W, The Rocks"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8675219,"lng":151.2016502},"viewport":{"northeast":{"lat":-33.86614532010728,"lng":151.2031259298927},"southwest":{"lat":-33.86884497989272,"lng":151.2004262701072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#7B9EB0","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","name":"Sydney Harbour Dinner Cruises","opening_hours":{"open_now":true},"photos":[{"height":835,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/109764923610545394994\">A Google User</a>"],"photo_reference":"Aap_uEBVsYnNcrpRixtrlHBztigZh70CwYkNWZzQnqJ39SjeBo_wvgKf-kXc6tgaMLBdQrRKmxmSKjOezoZrv-sHKVbTX0OI48HBqYYVnQiZQ-WGeuQDsLEPwX7LaVPa68nUAxX114Zpqt7bryoO9wL4qXdgEnopbOp5WWLALhKEHoIEH7f7","width":1200}],"place_id":"ChIJM1mOVTS6EmsRKaDzrTsgids","plus_code":{"compound_code":"46J2+XM Sydney, New South Wales","global_code":"4RRH46J2+XM"},"rating":4.8,"reference":"ChIJM1mOVTS6EmsRKaDzrTsgids","scope":"GOOGLE","types":["tourist_attraction","travel_agency","restaurant","food","point_of_interest","establishment"],"user_ratings_total":9,"vicinity":"32 The Promenade, Sydney"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8676569,"lng":151.2017213},"viewport":{"northeast":{"lat":-33.86629922010728,"lng":151.2031712798927},"southwest":{"lat":-33.86899887989272,"lng":151.2004716201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#7B9EB0","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","name":"Clearview Sydney Harbour Cruises","opening_hours":{"open_now":false},"photos":[{"height":685,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/114394575270272775071\">Clearview Glass Boat Cruises</a>"],"photo_reference":"Aap_uEAlExjnXA0VWyb_oYwCJ8utWG_Ennhwmn_xadpgenMNUgTuxrvgf1Xdw4bsbL6kFSWH7bhbpVHK1esdNY37ancJvbL_Gnsc7EZ5KEBNPvYZ_ZEyLco4a5v34LFkodxfFZbJ-ejO3zN4W_0C37P5jAmTnLWMNFYUPvoU3UMi70qHRNF5","width":1024}],"place_id":"ChIJNQfwZTiuEmsR1m1x9w0E2V0","plus_code":{"compound_code":"46J2+WM Sydney, New South Wales","global_code":"4RRH46J2+WM"},"rating":3.8,"reference":"ChIJNQfwZTiuEmsR1m1x9w0E2V0","scope":"GOOGLE","types":["travel_agency","restaurant","food","point_of_interest","establishment"],"user_ratings_total":49,"vicinity":"32 The Promenade King Street Wharf 5, Sydney"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8677035,"lng":151.2017297},"viewport":{"northeast":{"lat":-33.86634597010728,"lng":151.2031781298927},"southwest":{"lat":-33.86904562989272,"lng":151.2004784701072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#7B9EB0","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","name":"Sydney Harbour Lunch Cruise","opening_hours":{"open_now":false},"photos":[{"height":545,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/102428257696490257922\">Sydney Harbour Lunch Cruise</a>"],"photo_reference":"Aap_uEBFyQ2xDzHk7dGF_FTvNeJ01NQD6GROq89rufdGQl5Gi0zVfpnETBjPK2v7UEDl_6F-m8aR5FcEWJMqPaH4Oh_CQh2jaUAUAesUInucpCe7OFdleSYJ_8kgunhsIvGf1D1s_pes6Rk2JMVEs8rEs6ZHSTmUQXX2Yh-Gt9MuPQdYNuNv","width":969}],"place_id":"ChIJUbf3iDiuEmsROJxXbhYO7cM","plus_code":{"compound_code":"46J2+WM Sydney, New South Wales","global_code":"4RRH46J2+WM"},"rating":3.9,"reference":"ChIJUbf3iDiuEmsROJxXbhYO7cM","scope":"GOOGLE","types":["travel_agency","restaurant","food","point_of_interest","establishment"],"user_ratings_total":23,"vicinity":"5/32 The Promenade, Sydney"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8675883,"lng":151.2016452},"viewport":{"northeast":{"lat":-33.86623847010728,"lng":151.2029950298927},"southwest":{"lat":-33.86893812989273,"lng":151.2002953701073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#7B9EB0","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","name":"Sydney Showboats - Dinner Cruise With Show","opening_hours":{"open_now":false},"photos":[{"height":4912,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/105311284660389698992\">A Google User</a>"],"photo_reference":"Aap_uED1aGaMs8xYfiuzeBqVcFsk3yguUujdE4S3rNThMpLtoU0RukF40KCt0CAxgHP1HoY8Z7NYcWvax6qmMMVPBbmzGhoaiwiAAyv2GGA9vhcgsJ5w0LweT0y1lgRGZxU3nZIdNLiYAp9JHM171UkN04H6UqYSxKVZ8N_f2aslkqOaBF_e","width":7360}],"place_id":"ChIJjRuIiTiuEmsRCHhYnrWiSok","plus_code":{"compound_code":"46J2+XM Sydney, New South Wales","global_code":"4RRH46J2+XM"},"rating":4.1,"reference":"ChIJjRuIiTiuEmsRCHhYnrWiSok","scope":"GOOGLE","types":["travel_agency","restaurant","food","point_of_interest","establishment"],"user_ratings_total":119,"vicinity":"32 The Promenade, King Street Wharf, 5, Sydney"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8677035,"lng":151.2017297},"viewport":{"northeast":{"lat":-33.86634597010728,"lng":151.2031781298927},"southwest":{"lat":-33.86904562989272,"lng":151.2004784701072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#7B9EB0","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","name":"Magistic Cruises","opening_hours":{"open_now":true},"photos":[{"height":1536,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/103073818292552522030\">A Google User</a>"],"photo_reference":"Aap_uEC8bq-YphfIDcdxANBfgGMBIX2B0ggNep9ddVoePj6sfdcdusIn07x8biaxevZ_6BpzDDRsUL8No5P3ftI4on_pqbAbIEUL5gFGgezpVZ3M9GWvKdJm3njO_aJaghWl4_aQb75c0WGYDRFPhn6fWsLkD7KxodviJeCX4OCGt1eRJnlK","width":2048}],"place_id":"ChIJxRjqYTiuEmsRGebAA_chDLE","plus_code":{"compound_code":"46J2+WM Sydney, New South Wales","global_code":"4RRH46J2+WM"},"rating":3.9,"reference":"ChIJxRjqYTiuEmsRGebAA_chDLE","scope":"GOOGLE","types":["tourist_attraction","travel_agency","restaurant","food","point_of_interest","establishment"],"user_ratings_total":99,"vicinity":"King Street Wharf, 32 The Promenade, Sydney"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8609391,"lng":151.2098735},"viewport":{"northeast":{"lat":-33.85958927010727,"lng":151.2112233298927},"southwest":{"lat":-33.86228892989272,"lng":151.2085236701072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#7B9EB0","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","name":"Australian Cruise Group","opening_hours":{"open_now":false},"photos":[{"height":1536,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/113088009011192061895\">Keith Bauman</a>"],"photo_reference":"Aap_uED7aBwIbN6iuoZi8e9xCrt6F_EhppGCBfzYCgypetw8cGn4Ui0Y3JZe3QJ0buf0zc54BtPz-SWXxecPd6kDvNNZD5Eu_ZzTP13rXMzSDJa6UcwFiXU4y3qYrWAyJ6mtYrd2PJgw0KzvYaZoPze7Ka6zG6k3IOjeSICDYH6YOzkXhelj","width":2048}],"place_id":"ChIJpU8KgUKuEmsRKErVGEaa11w","plus_code":{"compound_code":"46Q5+JW Sydney, New South Wales","global_code":"4RRH46Q5+JW"},"rating":4.4,"reference":"ChIJpU8KgUKuEmsRKErVGEaa11w","scope":"GOOGLE","types":["travel_agency","restaurant","food","point_of_interest","establishment"],"user_ratings_total":5,"vicinity":"6 Cirular Quay, Sydney"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8686058,"lng":151.2018206},"viewport":{"northeast":{"lat":-33.86730002010728,"lng":151.2032717798927},"southwest":{"lat":-33.86999967989272,"lng":151.2005721201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#7B9EB0","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","name":"Rhythmboat Cruises","opening_hours":{"open_now":false},"photos":[{"height":2269,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/104066891898402903288\">Rhythmboat Sydney Harbour Cruises</a>"],"photo_reference":"Aap_uEAT8eop-IsfSAQ3KP6YXRNRsFkESXDecsaPnaVhq5bZzny5guvhS4smciianRGbZgDtFtAcU-ZXTaBfuh80CFw8vpJyKaB4grgW_CW64rU1JF9FDy_M8HtEk3rOrMhPDiF8ns-mc16E4rWSuAQIc76Du_eCd63ofoErESOtSWAQVcew","width":4032}],"place_id":"ChIJyWEHuEmuEmsRm9hTkapTCrk","plus_code":{"compound_code":"46J2+HP Sydney, New South Wales","global_code":"4RRH46J2+HP"},"rating":3.9,"reference":"ChIJyWEHuEmuEmsRm9hTkapTCrk","scope":"GOOGLE","types":["travel_agency","restaurant","food","point_of_interest","establishment"],"user_ratings_total":30,"vicinity":"King Street Wharf, King St, Sydney"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8712692,"lng":151.1898651},"viewport":{"northeast":{"lat":-33.86952792010727,"lng":151.1914560298927},"southwest":{"lat":-33.87222757989272,"lng":151.1887563701073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#7B9EB0","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","name":"Glass Island","opening_hours":{"open_now":false},"photos":[{"height":4480,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/117745044320706972021\">A Google User</a>"],"photo_reference":"Aap_uEAaToCBaHP7Gfdjc740gwIkQcjeUD97NO0TKXJ5IXB0CLGQA6slEpHn4k9LwyhoAzzbSTXJduYyFIkHVmQWGp34NggRxrtOWp7sJf5N6j0ASYlJPmAtWUaaCWnbx_pxdndsopeJ7PYn9kTiMgFcSs-GeipI8hDZgAJswMBnfsO0xWQ-","width":6720}],"place_id":"ChIJnScuboavEmsRyh-FGxhc3pw","plus_code":{"compound_code":"45HQ+FW Pyrmont, New South Wales","global_code":"4RRH45HQ+FW"},"rating":4.1,"reference":"ChIJnScuboavEmsRyh-FGxhc3pw","scope":"GOOGLE","types":["bar","restaurant","food","point_of_interest","establishment"],"user_ratings_total":90,"vicinity":"37 Bank St, Pyrmont"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.85876140000001,"lng":151.2100004},"viewport":{"northeast":{"lat":-33.85737742010728,"lng":151.2111319298927},"southwest":{"lat":-33.86007707989272,"lng":151.2084322701072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Junk Lounge","opening_hours":{"open_now":false},"photos":[{"height":608,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/104473997089847488714\">A Google User</a>"],"photo_reference":"Aap_uEDaHF9VZFV88tQqFyIgmPlcbCsK-ScCGuUVGh0mTAP4OzWh_0q0T5rPbeC7bas7vD5vC9oS95jtdr4oOnQmhGDAIbHkv4E6UHrQIl0f3XZ-3-RRDjn293w4qQb_BfhbPPO3nokU7npfMfVvCcelWf9WHiWNHT4EEHrFtvuhAWKobTnC","width":1080}],"place_id":"ChIJq9W3HZOvEmsRYtKNTRmq34M","plus_code":{"compound_code":"46R6+F2 The Rocks, New South Wales","global_code":"4RRH46R6+F2"},"price_level":2,"rating":4.1,"reference":"ChIJq9W3HZOvEmsRYtKNTRmq34M","scope":"GOOGLE","types":["restaurant","food","point_of_interest","establishment"],"user_ratings_total":63,"vicinity":"Level 2, Overseas Passenger Terminal, Circular Quay W, The Rocks"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8677035,"lng":151.2017297},"viewport":{"northeast":{"lat":-33.86634597010728,"lng":151.2031781298927},"southwest":{"lat":-33.86904562989272,"lng":151.2004784701072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#7B9EB0","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","name":"Sydney New Year's Eve Cruises","opening_hours":{"open_now":true},"photos":[{"height":1600,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/115281801304517408477\">A Google User</a>"],"photo_reference":"Aap_uEDceKHtQ9Hf2eHwnQYXLqrwZ1X2LYVhsfXbqrpIm3_lXZ9apURjAXtVgRVTGxJPD7BtaqR8C7bwaSTakmi0Pazn7g3suj8ZaQRBqheT3KVJDhZ9_GwVInLkWbxqnhivEXs1a-MC_J8XF1SL_5AQ3mAETgiLRQ04116IAEV5vHyIGRsa","width":2400}],"place_id":"ChIJ__8_hziuEmsR27ucFXECfOg","plus_code":{"compound_code":"46J2+WM Sydney, New South Wales","global_code":"4RRH46J2+WM"},"rating":5,"reference":"ChIJ__8_hziuEmsR27ucFXECfOg","scope":"GOOGLE","types":["travel_agency","restaurant","food","point_of_interest","establishment"],"user_ratings_total":5,"vicinity":"King Street Wharf 5, 32 The Promenade, Sydney"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.8669866,"lng":151.2017231},"viewport":{"northeast":{"lat":-33.86563197010727,"lng":151.2031347298927},"southwest":{"lat":-33.86833162989272,"lng":151.2004350701073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","icon_background_color":"#13B5C7","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet","name":"King Street Wharf Darling Harbour","opening_hours":{"open_now":true},"photos":[{"height":3024,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/101920674986627213698\">Êú±ÂìÅË≤û</a>"],"photo_reference":"Aap_uEDwKXVOjIaCj3LptOdd86B5umsdG7Z3jcvqcpUVLwHS6w8VGEkphgC8-shAx95CrsuXpnKz-XVIixVmgagQHKPH3vSLLqJ6LOAR7Q-_jiyx3ELXD0pm7AARiAtQAMBN9A-oqbtvGbE27yDpvBS1lKe9PCm-dMfrHIIcsS91Qeq2E4b6","width":4032}],"place_id":"ChIJkfDzJ72vEmsR8xtYbk5f0p0","plus_code":{"compound_code":"46M2+6M Sydney, New South Wales","global_code":"4RRH46M2+6M"},"rating":4.4,"reference":"ChIJkfDzJ72vEmsR8xtYbk5f0p0","scope":"GOOGLE","types":["tourist_attraction","convenience_store","bowling_alley","travel_agency","bar","restaurant","food","point_of_interest","store","establishment"],"user_ratings_total":3213,"vicinity":"The Promenade, Lime St, Sydney"},{"business_status":"OPERATIONAL","geometry":{"location":{"lat":-33.870383,"lng":151.1979245},"viewport":{"northeast":{"lat":-33.86901092010727,"lng":151.1991702798927},"southwest":{"lat":-33.87171057989271,"lng":151.1964706201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"The Little Snail Restaurant","opening_hours":{"open_now":false},"photos":[{"height":900,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/114727320476039103791\">The Little Snail</a>"],"photo_reference":"Aap_uEA9aHKkB_6VoFx4VHRSp19PCwnTOuGfpmDYw1NdYNbzncfdjjfEmiiFz-E4tIJ6iGVZjR_bejX6wNr5thJjqlcdQ2PvPyTTo1jGtxk31JG9b6Vd0vu_v4Ep7yutzf3KTzBjYFBIGsYPf3Pj0DptMWPLP7fn33SBT7YmRqDEoGcUsBzw","width":1350}],"place_id":"ChIJtwapWjeuEmsRcxV5JARHpSk","plus_code":{"compound_code":"45HX+R5 Pyrmont, New South Wales","global_code":"4RRH45HX+R5"},"price_level":2,"rating":4.5,"reference":"ChIJtwapWjeuEmsRcxV5JARHpSk","scope":"GOOGLE","types":["restaurant","food","point_of_interest","establishment"],"user_ratings_total":1916,"vicinity":"3/50 Murray St, Pyrmont"}],"status":"OK"}},"headers":{}}}}},"/maps/api/place/textsearch/json":{"get":{"description":"The Google Places API Text Search Service is a web service that returns information about a set of places based on a string ‚Äî for example \"pizza in New York\" or \"shoe stores near Ottawa\" or \"123 Main Street\". The service responds with a list of places matching the text string and any location bias that has been set.\n\nThe service is especially useful for making [ambiguous address](https://developers.google.com/maps/documentation/geocoding/best-practices) queries in an automated system, and non-address components of the string may match businesses as well as addresses. Examples of ambiguous address queries are incomplete addresses, poorly formatted addresses, or a request that includes non-address components such as business names.\n\nThe search response will include a list of places. You can send a Place Details request for more information about any of the places in the response.\n","summary":"textSearch","tags":["Places API"],"operationId":"textSearch","deprecated":false,"produces":["application/json"],"parameters":[{"name":"location","in":"query","required":false,"type":"string","description":"The point around which to retrieve place information. This must be specified as `latitude,longitude`. \n\n<div class=\"note\">The <code>location</code> parameter may be overriden if the <code>query</code> contains an explicit location such as <code>Market in Barcelona</code>. Using quotes around the query may also influence the weight given to the <code>location</code> and <code>radius</code>.</div>"},{"name":"maxprice","in":"query","required":false,"enum":["0","1","2","3","4"],"type":"string","description":"Restricts results to only those places within the specified range. Valid values range between 0 (most affordable) to 4 (most expensive), inclusive. The exact amount indicated by a specific value will vary from region to region."},{"name":"minprice","in":"query","required":false,"enum":["0","1","2","3","4"],"type":"string","description":"Restricts results to only those places within the specified range. Valid values range between 0 (most affordable) to 4 (most expensive), inclusive. The exact amount indicated by a specific value will vary from region to region."},{"name":"opennow","in":"query","required":false,"type":"boolean","description":"Returns only those places that are open for business at the time the query is sent. Places that do not specify opening hours in the Google Places database will not be returned if you include this parameter in your query."},{"name":"pagetoken","in":"query","required":false,"type":"string","description":"Returns up to 20 results from a previously run search. Setting a `pagetoken` parameter will execute a search with the same parameters used previously ‚Äî all parameters other than pagetoken will be ignored."},{"name":"query","in":"query","required":true,"type":"string","description":"The text string on which to search, for example: \"restaurant\" or \"123 Main Street\". This must a place name, address, or category of establishments. Any other types\nof input can generate errors and are not guaranteed to return valid results. The Google Places service will return candidate matches based on this string and order\nthe results based on their perceived relevance."},{"name":"radius","in":"query","required":false,"type":"number","format":"double","description":"Defines the distance (in meters) within which to return place results. You may bias results to a specified circle by passing a `location` and a `radius` parameter. Doing so instructs the Places service to _prefer_ showing results within that circle; results outside of the defined area may still be displayed.\n\nThe radius will automatically be clamped to a maximum value depending on the type of search and other parameters.\n\n* Autocomplete: 50,000 meters\n* Nearby Search: \n  * with `keyword` or `name`: 50,000 meters\n  * without `keyword` or `name`\n    * Up to 50,000 meters, adjusted dynamically based on area density, independent of `rankby` parameter.\n    * When using `rankby=distance`, the radius parameter will not be accepted, and will result in an `INVALID_REQUEST`.\n* Query Autocomplete: 50,000 meters\n* Text Search: 50,000 meters"},{"name":"type","in":"query","required":false,"type":"string","description":"Restricts the results to places matching the specified type. Only one type may be specified. If more than one type is provided, all types following the first entry are ignored.\n\n* `type=hospital|pharmacy|doctor` becomes `type=hospital`\n* `type=hospital,pharmacy,doctor` is ignored entirely\n\nSee the list of [supported types](https://developers.google.com/maps/documentation/places/web-service/supported_types).\n<div class=\"note\">Note: Adding both `keyword` and `type` with the same value (`keyword=cafe&type=cafe` or `keyword=parking&type=parking`) can yield `ZERO_RESULTS`.</div>"},{"name":"language","in":"query","required":false,"enum":["ar","bg","bn","ca","cs","da","de","el","en","en-AU","en-GB","es","eu","fa","fi","fil","fr","gl","gu","hi","hr","hu","id","it","iw","ja","kn","ko","lt","lv","ml","mr","nl","no","pl","pt","pt-BR","pt-PT","ro","ru","sk","sl","sr","sv","ta","te","th","tl","tr","uk","vi","zh-CN","zh-TW"],"default":"en","type":"string","description":"The language in which to return results.\n\n* See the [list of supported languages](https://developers.google.com/maps/faq#languagesupport). Google often updates the supported languages, so this list may not be exhaustive.\n* If `language` is not supplied, the API attempts to use the preferred language as specified in the `Accept-Language` header.\n* The API does its best to provide a street address that is readable for both the user and locals. To achieve that goal, it returns street addresses in the local language, transliterated to a script readable by the user if necessary, observing the preferred language. All other addresses are returned in the preferred language. Address components are all returned in the same language, which is chosen from the first component.\n* If a name is not available in the preferred language, the API uses the closest match.\n* The preferred language has a small influence on the set of results that the API chooses to return, and the order in which they are returned. The geocoder interprets abbreviations differently depending on language, such as the abbreviations for street types, or synonyms that may be valid in one language but not in another. For example, _utca_ and _t√©r_ are synonyms for street in Hungarian."},{"name":"region","in":"query","required":false,"enum":["ac","ad","ae","af","ag","ai","al","am","an","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bl","bm","bn","bo","bq","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","en","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mf","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tp","tr","tt","tv","tw","tz","ua","ug","uk","um","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"],"default":"en","type":"string","description":"The region code, specified as a [ccTLD (\"top-level domain\")](https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#Country_code_top-level_domains) two-character value. Most ccTLD codes are identical to ISO 3166-1 codes, with some notable exceptions. For example, the United Kingdom's ccTLD is \"uk\" (.co.uk) while its ISO 3166-1 code is \"gb\" (technically for the entity of \"The United Kingdom of Great Britain and Northern Ireland\")."}],"responses":{"200":{"description":"200 OK","schema":{"$ref":"#/definitions/PlacesTextSearchResponse"},"examples":{"application/json":{"html_attributions":[],"next_page_token":"Aap_uEAHsgFErpxZrytW1mgKsefD327VCf0OgNF9vpXPwTOG6AGhEZpGgMgofSzgCahevXhneCe9M9H24SOuE4ZcaE0ZR01gVykQZ6EoDnlWEQvXBXe6z0sgF5MQo7qBb6uD4VHKDLhgR59Lb86BzTHJzTzbm61OAPvyInZoaQxK8-oEf2PShZT7XRJKoF5nISbwvU_-RomwGDVi27oj0fToIyV-Vj2ftJw8ZUPbdGGCbcDolQyAwj11Dy2aaeK4SGwg2mO5Akxa7fCze2RJ0GCAvXXp7omTFDy_47OXsFgDPfzluc7mEb5VlzlIMZ0eWQ8VeNigtv-XZZG0f3HSo81Yeq3QhXedJ5oNE1XCwyMly3YVgw_h3amOzAOuDigF1pgFnfGyzxD8vr2bfbPTNvA9l7IJ8Q","results":[{"business_status":"OPERATIONAL","formatted_address":"1 Macquarie St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8592041,"lng":151.2132635},"viewport":{"northeast":{"lat":-33.85786707010728,"lng":151.2147093298927},"southwest":{"lat":-33.86056672989272,"lng":151.2120096701072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Aria Restaurant Sydney","opening_hours":{"open_now":false},"photos":[{"height":4032,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/112033760018394328606\">Dohyun Kim</a>"],"photo_reference":"Aap_uED7B83PoQ1wNgzYcFZEOw1P2DqNjlaqiXxo-r4F_NaR27uV2OiIvijkI6RYyfiiHYo9UqjnZkRtZaNTk4C6Ickh3k3stsSvBU0KfLtFow-oRujSYYChYwiYhVyP27omLzQQjafhJ2N3LJbjcMxSePKXsQzYCqmOLWg0E9mSExMJ4aM","width":3024}],"place_id":"ChIJdxxU1WeuEmsR11c4fswX-Io","plus_code":{"compound_code":"46R7+88 Sydney, New South Wales, Australia","global_code":"4RRH46R7+88"},"price_level":4,"rating":4.5,"reference":"ChIJdxxU1WeuEmsR11c4fswX-Io","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":1681},{"business_status":"OPERATIONAL","formatted_address":"15 Bligh St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8651396,"lng":151.2104533},"viewport":{"northeast":{"lat":-33.86384167010728,"lng":151.2118993298927},"southwest":{"lat":-33.86654132989272,"lng":151.2091996701073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Restaurant Hubert","opening_hours":{"open_now":false},"photos":[{"height":683,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/113719639442868633401\">Ashley Hughes</a>"],"photo_reference":"Aap_uEB41WOb_Nl8I8py4D6uXoLHzVYtFZZcucYdYAN1FtzXBnAu59xXrxk5tekoktAbklwmHeSFfdnTCWgHRZ1C5Azp9AMCP9GRGV1f2Z1-5kjsVgnYPiq82JoueSUdCSQJFabyL0cagtcGaFKetVi7DmUIHDQknEPCh_cpCbdOMw4Bkq5q","width":1024}],"place_id":"ChIJF5-RdGquEmsR5rN_H74uSqQ","plus_code":{"compound_code":"46M6+W5 Sydney, New South Wales, Australia","global_code":"4RRH46M6+W5"},"price_level":3,"rating":4.6,"reference":"ChIJF5-RdGquEmsR5rN_H74uSqQ","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":2393},{"business_status":"OPERATIONAL","formatted_address":"529 Kent St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8751241,"lng":151.2049722},"viewport":{"northeast":{"lat":-33.87375712010727,"lng":151.2065098798927},"southwest":{"lat":-33.87645677989271,"lng":151.2038102201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Tetsuya's Restaurant","opening_hours":{"open_now":false},"photos":[{"height":1536,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/104244205094808346734\">A Google User</a>"],"photo_reference":"Aap_uEABxcDNSMAz51CRsIr5ejvKYb61EQ94XxZTVO_mGdB8OcnoywPCx8f9e6xeAJjPzCcW_2ds6GfObP5l1gkq9lily-rVi5z2x2Ue7CvLwKyquIJnrF6offeY79I-jeiL153aXMNcunfpA2ERTkzl8SX9jSh7T5wZ49oSKL-0F8fh8kVF","width":2304}],"place_id":"ChIJxXSgfDyuEmsR3X5VXGjBkFg","plus_code":{"compound_code":"46F3+XX Sydney, New South Wales, Australia","global_code":"4RRH46F3+XX"},"price_level":4,"rating":4.6,"reference":"ChIJxXSgfDyuEmsR3X5VXGjBkFg","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":1127},{"business_status":"OPERATIONAL","formatted_address":"98 Clarence St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8679688,"lng":151.2053027},"viewport":{"northeast":{"lat":-33.86662567010728,"lng":151.2065763298927},"southwest":{"lat":-33.86932532989272,"lng":151.2038766701073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Bistro Papillon","opening_hours":{"open_now":false},"photos":[{"height":2880,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/115283784392961129380\">kate Kwak</a>"],"photo_reference":"Aap_uEDTgSYN79L90iMhL-g9lZX-52myIvxBj82nYBA2MTVnSNbuqBwnDBkjHuiLHMG_0e4na2UxV8EpxZCHoisxLHRTFkr8ahDCVhgK9cxhnEgSjmqIPAQh7n23JqfHAzSp-2ksgg9FaK2NYNyAfhC_MtSFUXyVd0aNLdEsj95pWuFWlRyi","width":2160}],"place_id":"ChIJywXDWT-uEmsRxyuZ0Inwi04","plus_code":{"compound_code":"46J4+R4 Sydney, New South Wales, Australia","global_code":"4RRH46J4+R4"},"price_level":3,"rating":4.5,"reference":"ChIJywXDWT-uEmsRxyuZ0Inwi04","types":["meal_takeaway","restaurant","point_of_interest","food","establishment"],"user_ratings_total":498},{"business_status":"OPERATIONAL","formatted_address":"Ground Floor, 199 George St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8616781,"lng":151.2077174},"viewport":{"northeast":{"lat":-33.86039142010728,"lng":151.2091855798927},"southwest":{"lat":-33.86309107989273,"lng":151.2064859201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Mode Kitchen & Bar","opening_hours":{"open_now":true},"photos":[{"height":1536,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/104492734984758109746\">Mode Kitchen &amp; Bar</a>"],"photo_reference":"Aap_uECCCAhdFqO1rCWXBXK2Ub1UloT6k5-VfS_J3HSNB_Znw1gEd78ltmokAt_g5kBa2dKrVKt_ob4rSJBvrREXUykDzRWChaXHIacM8KJix6J97T2P2WrzEP5FpNRsnfim8f4biVSNKSwmXGX_ZynFSmgBQOgDt1iVpdZ0IZ1beSPLHPL3","width":2048}],"place_id":"ChIJL2r6S0KuEmsRxzk0sfWZYnU","plus_code":{"compound_code":"46Q5+83 Sydney, New South Wales, Australia","global_code":"4RRH46Q5+83"},"price_level":2,"rating":4.4,"reference":"ChIJL2r6S0KuEmsRxzk0sfWZYnU","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":217},{"business_status":"OPERATIONAL","formatted_address":"Colonial Mutual Life Building, Angel Pl, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8671138,"lng":151.2083642},"viewport":{"northeast":{"lat":-33.86574872010727,"lng":151.2097876798927},"southwest":{"lat":-33.86844837989272,"lng":151.2070880201072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Long Chim Sydney","opening_hours":{"open_now":false},"photos":[{"height":4480,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/106160289014902493250\">Long Chim Sydney</a>"],"photo_reference":"Aap_uECawW_4NulE_MO_wdqh5WwoX9oIMSVnhkjv73J87-xfYE0zYMeUX23RY3F45RPyREWucZeF5KY8Ty_Vir3uQ01EglcwQq_unavJ5wM1CUpLamMyuY4ifMisnNJcbDywnvlKUqcW8WfAD6fPIxeSKxVjsl6E9h9keqyy73DRRm3FuqMd","width":6720}],"place_id":"ChIJ98SIQkCuEmsRQAStwDCAshw","plus_code":{"compound_code":"46M5+58 Sydney, New South Wales, Australia","global_code":"4RRH46M5+58"},"price_level":3,"rating":4.1,"reference":"ChIJ98SIQkCuEmsRQAStwDCAshw","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":1234},{"business_status":"OPERATIONAL","formatted_address":"17-19 Alberta St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8777986,"lng":151.2105307},"viewport":{"northeast":{"lat":-33.87646642010727,"lng":151.2119536298927},"southwest":{"lat":-33.87916607989272,"lng":151.2092539701073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Alberto's Lounge","opening_hours":{"open_now":false},"photos":[{"height":4000,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/117499940191355312122\">Kreeson Naraidoo</a>"],"photo_reference":"Aap_uEAKwkOCpQ5q8I0mLRMpDLfSe1E6g7umIx6QSy3GrWO-w6Yk533jOo0kCHi1LinjLzbFoSRxNcyvTk0RXj502jGe6VU__UOPjEB6GetV3Dpwgs_xR0Rb52wlx4BFMz8QbsIWOZNzF9Nutk_gLjCPKWk-A_eWjxmQerT7ZWG3OKhDkd_K","width":6000}],"place_id":"ChIJU_xO9hOvEmsRERZv-itx524","plus_code":{"compound_code":"46C6+V6 Sydney, New South Wales, Australia","global_code":"4RRH46C6+V6"},"rating":4.6,"reference":"ChIJU_xO9hOvEmsRERZv-itx524","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":548},{"business_status":"OPERATIONAL","formatted_address":"25 Bligh St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8654401,"lng":151.2101016},"viewport":{"northeast":{"lat":-33.86417187010728,"lng":151.2115775298928},"southwest":{"lat":-33.86687152989273,"lng":151.2088778701073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Chophouse Sydney","opening_hours":{"open_now":false},"photos":[{"height":3550,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/106047480665428753229\">A Google User</a>"],"photo_reference":"Aap_uEAWMbQLzK8Hf4k2UHZZ9bmXF6U8ghWjT4d3r6a3g6Jj0s4i3mDumwH49NWyAZe_gT6Dzmne8UoMPGYBSXDb8sKCUCGQRyMViMEWJCFDuT4Jvjwa_7JXsyj0_VEm9nmua4Sy39K9uk8ZQEUTMCqEIPlYzxRo3VXUm0KkM4TrPnJ8eDG9","width":5325}],"place_id":"ChIJZ-VZ30GuEmsRwLVCmEo-B2I","plus_code":{"compound_code":"46M6+R2 Sydney, New South Wales, Australia","global_code":"4RRH46M6+R2"},"price_level":3,"rating":4.3,"reference":"ChIJZ-VZ30GuEmsRwLVCmEo-B2I","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":1174},{"business_status":"OPERATIONAL","formatted_address":"46-52 Meagher St, Chippendale NSW 2008, Australia","geometry":{"location":{"lat":-33.8874605,"lng":151.2008331},"viewport":{"northeast":{"lat":-33.88617642010727,"lng":151.2021869298927},"southwest":{"lat":-33.88887607989272,"lng":151.1994872701073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Ester Restaurant","opening_hours":{"open_now":false},"photos":[{"height":4032,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/105059859896721262581\">Angela Tong</a>"],"photo_reference":"Aap_uEDAVR2ZbxrkwY2XIKsAO_K54A3sLZof-Cc8vjyqKVRXhwoOU8OkOpSG8dFFjJqD0EungtPoFuOAVmrZDA5sdUqgekvLTneFEWvQntR4zE0s8fuaVZf6nnl4FUnAalKWOQwEakMlAFT-PvqHzXaXfvuMJ69euepMNMJCWUCUz9HlzSuB","width":3024}],"place_id":"ChIJ7WdhetixEmsRzIf7Q-q6ocY","plus_code":{"compound_code":"4672+28 Chippendale, New South Wales, Australia","global_code":"4RRH4672+28"},"price_level":3,"rating":4.5,"reference":"ChIJ7WdhetixEmsRzIf7Q-q6ocY","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":956},{"business_status":"OPERATIONAL","formatted_address":"27 O'Connell St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8652017,"lng":151.2088233},"viewport":{"northeast":{"lat":-33.86401937010727,"lng":151.2103577298927},"southwest":{"lat":-33.86671902989272,"lng":151.2076580701073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Bentley Restaurant + Bar","opening_hours":{"open_now":false},"photos":[{"height":3024,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/110444118100375330898\">A Google User</a>"],"photo_reference":"Aap_uEC2sk8YPyjk7yBwj6pWLHMjQea6HkLgzw2VTgxaU9GAR4Z7cKZ-XDixUWpcmtpyKPJzYoVlSv92kxGTOgkAGZEyDdXGJWT5RgLZRi_HOGVtWBrwYqD5IusdvQ4fBZj2j3yDOyM5Rw-fZpl-MiiSjhubuvR0Ra_x5PbDjVvYb5lgN_Yp","width":3024}],"place_id":"ChIJybJExkGuEmsRmpbxj1gH_-U","plus_code":{"compound_code":"46M5+WG Sydney, New South Wales, Australia","global_code":"4RRH46M5+WG"},"price_level":4,"rating":4.3,"reference":"ChIJybJExkGuEmsRmpbxj1gH_-U","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":606},{"business_status":"OPERATIONAL","formatted_address":"56 Pirrama Rd, Pyrmont NSW 2009, Australia","geometry":{"location":{"lat":-33.8668159,"lng":151.1973855},"viewport":{"northeast":{"lat":-33.86555562010727,"lng":151.1990430798927},"southwest":{"lat":-33.86825527989272,"lng":151.1963434201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"LuMi Dining","opening_hours":{"open_now":false},"photos":[{"height":3456,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/111354624612472023397\">Qing-Ling Tran</a>"],"photo_reference":"Aap_uEBWfjS-8EN9i6bl8cflsqTawfHBVe2X7ZZ0BlJC0ri_MMEn-9k7oLhCq5gdozyhx-trWhl_FdrUdUPWerEW_MRa6eLD4cmLL1ZdF418ZtYSOnR3H1aIbmQpGNF7ltXrzaWVFI1MKYzJoat4WnyUyDUPPGx5dynj_rC4ufTTFTLqV2jb","width":4608}],"place_id":"ChIJDZzo5DeuEmsRsi1wzrIp6HY","plus_code":{"compound_code":"45MW+7X Pyrmont, New South Wales, Australia","global_code":"4RRH45MW+7X"},"price_level":4,"rating":4.6,"reference":"ChIJDZzo5DeuEmsRsi1wzrIp6HY","types":["bar","restaurant","point_of_interest","food","establishment"],"user_ratings_total":648},{"business_status":"OPERATIONAL","formatted_address":"39 Lime St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.867806,"lng":151.2017201},"viewport":{"northeast":{"lat":-33.86646482010728,"lng":151.2031808298927},"southwest":{"lat":-33.86916447989272,"lng":151.2004811701072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"The Malaya","opening_hours":{"open_now":false},"photos":[{"height":885,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/112797482079521405927\">The Malaya</a>"],"photo_reference":"Aap_uEALKL4StbrRJxvVFBPP4bFq7exqB3GLs_qDheVF_MQD9mIq4XG2QeXc1WimxybYSkdl2sj1e9xXzR_ZTTaHC13faCQxY4t2BM2HMJ20sCZZoE2TKDRIwuQ4B7AxnMypKBTUXtkHTtsMJPI8nTIIKoa5b8rM9Pf3HnUacPUg0kKmlfqj","width":884}],"place_id":"ChIJ4U8HhjiuEmsRyevJVTxWbFo","plus_code":{"compound_code":"46J2+VM Sydney, New South Wales, Australia","global_code":"4RRH46J2+VM"},"price_level":3,"rating":4.5,"reference":"ChIJ4U8HhjiuEmsRyevJVTxWbFo","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":1344},{"business_status":"OPERATIONAL","formatted_address":"60 Carrington St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8668185,"lng":151.2064637},"viewport":{"northeast":{"lat":-33.86546022010727,"lng":151.2076971798927},"southwest":{"lat":-33.86815987989272,"lng":151.2049975201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Bopp & Tone","opening_hours":{"open_now":false},"photos":[{"height":1179,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/103398240624630529212\">Md. Kurban Ali</a>"],"photo_reference":"Aap_uEDb3R6906_imHTfBq-WvDVaUYWYletbwXZ_lk_pUmdZ6e_ldeX-kmVg470dN7kL0V7fmRlLwblKhEHpcwU9ryWE97boU0u021G9IybZSA7dzM07eUfMNbdBYAU9SJzUihkkKYHXRaGjUQah8hsQHRzoMe0fU6SUD5VJgdOiCfAg3jzA","width":1772}],"place_id":"ChIJfTxskB6vEmsRXPSIwVlleUA","plus_code":{"compound_code":"46M4+7H Sydney, New South Wales, Australia","global_code":"4RRH46M4+7H"},"price_level":1,"rating":4.7,"reference":"ChIJfTxskB6vEmsRXPSIwVlleUA","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":689},{"business_status":"OPERATIONAL","formatted_address":"17 Bligh St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8653056,"lng":151.2103593},"viewport":{"northeast":{"lat":-33.86401087010728,"lng":151.2117942798927},"southwest":{"lat":-33.86671052989272,"lng":151.2090946201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Balc√≥n by Tapavino","opening_hours":{"open_now":false},"photos":[{"height":2359,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/116762976445257331541\">A Google User</a>"],"photo_reference":"Aap_uECptqTTZFSmP9ZQ6gZpwBUHd1oPYdpYimtZu0hPlQYsy2dwEirrOnIvzj-bytjVTXPps_462XYekZHVXtXcd68S4HVKcxGOODVskziJFnxqP-gR7ToqWHusnfVmzjeEip_ofrJwIRC9rIeQNfdDdY5bR3EHHg-RBifLT78Hgy_9AmDR","width":4192}],"place_id":"ChIJTxj0dGquEmsR-6tLuaGJl_M","plus_code":{"compound_code":"46M6+V4 Sydney, New South Wales, Australia","global_code":"4RRH46M6+V4"},"price_level":3,"rating":4.4,"reference":"ChIJTxj0dGquEmsR-6tLuaGJl_M","types":["bar","restaurant","point_of_interest","food","establishment"],"user_ratings_total":615},{"business_status":"OPERATIONAL","formatted_address":"Shop 100/412/414 George St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8694151,"lng":151.2071166},"viewport":{"northeast":{"lat":-33.86806547010728,"lng":151.2084946798927},"southwest":{"lat":-33.87076512989272,"lng":151.2057950201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"The Restaurant Pendolino","opening_hours":{"open_now":false},"photos":[{"height":1365,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/115568244243208638832\">The Restaurant Pendolino</a>"],"photo_reference":"Aap_uEDQIyh5y5AoYrcKQewc9VRhruEl5uP9RoCAvSNblDjgl4_noqxRu533JpHJ05JsHmFFGBstVK6VI3liXUT25hItj4XPWmgt82fAWtho-Ug0Y9L7csf2i2xdb28SK4NsyqHA4Vf-J6o2jxPDRu-UM_lPP_wrkCzHdl4owDtXSFB0Yv4T","width":2048}],"place_id":"ChIJL1zhdD-uEmsRgDPXKOx1JyU","plus_code":{"compound_code":"46J4+6R Sydney, New South Wales, Australia","global_code":"4RRH46J4+6R"},"price_level":3,"rating":4.6,"reference":"ChIJL1zhdD-uEmsRgDPXKOx1JyU","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":505},{"business_status":"OPERATIONAL","formatted_address":"4 Ash St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8669418,"lng":151.2075261},"viewport":{"northeast":{"lat":-33.86557222010728,"lng":151.2089249298927},"southwest":{"lat":-33.86827187989272,"lng":151.2062252701072}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Mercado","opening_hours":{"open_now":false},"photos":[{"height":3183,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/108000506056576855925\">Mercado</a>"],"photo_reference":"Aap_uEA5WUv48wnMuPFig77wsLUcSSckmhgYcvkn3U0C6_VusopaQQYWMpWpi8r_mbwxDST8Y3eKHeqzSOTOy-6Xals5vXGxKM9QG8QloLN9zlk5FpfjCmRiXWFj2hGh5RTXumuBoq2WY5HmKgLXVK3Wa-59thWtv1o6bLJawqM1dad3rPIn","width":4774}],"place_id":"ChIJCXaGXkCuEmsR_O_xTuWrmT8","plus_code":{"compound_code":"46M5+62 Sydney, New South Wales, Australia","global_code":"4RRH46M5+62"},"price_level":3,"rating":4.4,"reference":"ChIJCXaGXkCuEmsR_O_xTuWrmT8","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":572},{"business_status":"OPERATIONAL","formatted_address":"1 Angel Pl, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8670308,"lng":151.208067},"viewport":{"northeast":{"lat":-33.86563237010727,"lng":151.2094688798927},"southwest":{"lat":-33.86833202989272,"lng":151.2067692201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Ragazzi Wine and Pasta","opening_hours":{"open_now":false},"photos":[{"height":1000,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/105392127649390940296\">A Google User</a>"],"photo_reference":"Aap_uEDfY4kMWk39O1mGg8-nYtl970y3-sr7ex3F5EUu9aL-FL5MGigK4uWf45YFO1a2rF3uaUQ2VTT9W5GjpaTlljko5Brrm5h3XOkS5uPvuYba_mK_K_mx0Byz2WbXh9-7r9jlz075DJMiG7rs42aw26bwffF4aYZpBoQfxipXEMc4_92i","width":1500}],"place_id":"ChIJTRnbxc6vEmsRnUOl_URYSvs","plus_code":{"compound_code":"46M5+56 Sydney, New South Wales, Australia","global_code":"4RRH46M5+56"},"rating":4.4,"reference":"ChIJTRnbxc6vEmsRnUOl_URYSvs","types":["restaurant","bar","point_of_interest","food","establishment"],"user_ratings_total":433},{"business_status":"OPERATIONAL","formatted_address":"5 Kensington St, Chippendale NSW 2008, Australia","geometry":{"location":{"lat":-33.8848073,"lng":151.2015895},"viewport":{"northeast":{"lat":-33.88340327010728,"lng":151.2029597798927},"southwest":{"lat":-33.88610292989272,"lng":151.2002601201073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Automata Restaurant","opening_hours":{"open_now":false},"photos":[{"height":3024,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/106155344778912457393\">IS L</a>"],"photo_reference":"Aap_uEDo7q_kvvgqOXdvRb0Uu2Fa3V_UYYFeBq7V9xTwn4353OI9jzFxrCoJk63NUbUZPd4BFbK0dPXNjBZ_-5f9b-8Dh6IKkgW0ynExs4rsfjA5YxqkYKc2WKCAElKKrR8N7G0PfV-y4CqdYc9syC3bzC571VFna2ZUudx_ljlrHXL4jnOW","width":4032}],"place_id":"ChIJhfcGASeuEmsRmj19JwYiqUo","plus_code":{"compound_code":"4682+3J Chippendale, New South Wales, Australia","global_code":"4RRH4682+3J"},"price_level":3,"rating":4.4,"reference":"ChIJhfcGASeuEmsRmj19JwYiqUo","types":["restaurant","point_of_interest","food","establishment"],"user_ratings_total":474},{"business_status":"OPERATIONAL","formatted_address":"Bennelong Point, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8567498,"lng":151.2152535},"viewport":{"northeast":{"lat":-33.85569109999999,"lng":151.21607855},"southwest":{"lat":-33.8599259,"lng":151.21277835}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Bennelong","opening_hours":{"open_now":false},"photos":[{"height":3840,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/112111459665476218482\">A Google User</a>"],"photo_reference":"Aap_uEDHg9QjKCjtzVDOOJtqOEHSp2iQ8rykuMNdHDFuviyfbJP9XfxM6x2TdxZYuu4kfSrn79o5DroGRG6NQR5pa3OVlFBVVfD88uUKBlhxnOlq4GqRbgk8W1xT0TxL7fjlKPPqa3hA0ZrweoOknLRDxv8zCKpPZu0gdlJfoKAG_VAnbUv-","width":5760}],"place_id":"ChIJQcmNYGauEmsR84D5HAJJUhw","plus_code":{"compound_code":"46V8+84 Sydney, New South Wales, Australia","global_code":"4RRH46V8+84"},"price_level":4,"rating":4.5,"reference":"ChIJQcmNYGauEmsR84D5HAJJUhw","types":["bar","restaurant","point_of_interest","food","establishment"],"user_ratings_total":1230},{"business_status":"OPERATIONAL","formatted_address":"123 Clarence St, Sydney NSW 2000, Australia","geometry":{"location":{"lat":-33.8671505,"lng":151.2049296},"viewport":{"northeast":{"lat":-33.86582657010727,"lng":151.2063577298927},"southwest":{"lat":-33.86852622989272,"lng":151.2036580701073}}},"icon":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/restaurant-71.png","icon_background_color":"#FF9E67","icon_mask_base_uri":"https://maps.gstatic.com/mapfiles/place_api/icons/v2/restaurant_pinlet","name":"Machiavelli","opening_hours":{"open_now":false},"photos":[{"height":605,"html_attributions":["<a href=\"https://maps.google.com/maps/contrib/110393729963013157229\">Nikhil Kuchroo</a>"],"photo_reference":"Aap_uEBKwIZhaQQgPdMT72V5LBm4ELL7a9SZOtIObjmvn_mYzY1fFq3lIHrzg8NRas-h4fhWdNfC8QC4qVrPUP6VpnIRheN9jdBteNRjWiFRyCSQFEDsW2JUU3h4kCTnf90Uw0KcWyXPACm9ZXq1Wp-m2Dkx4AbSYpo17chLhDCQlLBmSDjP","width":1280}],"place_id":"ChIJgVcAr0CuEmsRJjJm03tgFtE","plus_code":{"compound_code":"46M3+4X Sydney, New South Wales, Australia","global_code":"4RRH46M3+4X"},"price_level":3,"rating":4.5,"reference":"ChIJgVcAr0CuEmsRJjJm03tgFtE","types":["meal_takeaway","restaurant","point_of_interest","food","establishment"],"user_ratings_total":529}],"status":"OK"}},"headers":{}}}}},"/maps/api/place/photo":{"get":{"description":"The Place Photo service, part of the Places API, is a read- only API that allows you to add high quality photographic content to your application. The Place Photo service gives you access to the millions of photos stored in the Places database. When you get place information using a Place Details request, photo references will be returned for relevant photographic content. Find Place, Nearby Search, and Text Search requests also return a single photo reference per place, when relevant. Using the Photo service you can then access the referenced photos and resize the image to the optimal size for your application.\n\nPhotos returned by the Photo service are sourced from a variety of locations, including business owners and user contributed photos. In most cases, these photos can be used without attribution, or will have the required attribution included as a part of the image. However, if the returned photo element includes a value in the html_attributions field, you will have to include the additional attribution in your application wherever you display the image.\n","summary":"placePhoto","tags":["Places API"],"operationId":"placePhoto","deprecated":false,"produces":["text/plain"],"parameters":[{"name":"photo_reference","in":"query","required":true,"type":"string","description":"A string identifier that uniquely identifies a photo. Photo references are returned from either a Place Search or Place Details request."},{"name":"maxheight","in":"query","required":false,"type":"number","format":"double","description":"Specifies the maximum desired height, in pixels, of the image. If the image is smaller than the values specified, the original image will be returned. If the image is larger in either dimension, it will be scaled to match the smaller of the two dimensions, restricted to its original aspect ratio. Both the `maxheight` and `maxwidth` properties accept an integer between `1` and `1600`."},{"name":"maxwidth","in":"query","required":false,"type":"number","format":"double","description":"Specifies the maximum desired width, in pixels, of the image. If the image is smaller than the values specified, the original image will be returned. If the image is larger in either dimension, it will be scaled to match the smaller of the two dimensions, restricted to its original aspect ratio. Both the `maxheight` and `maxwidth` properties accept an integer between `1` and `1600`."}],"responses":{"200":{"description":"200 OK","schema":{"default":""},"headers":{}}}}},"/maps/api/place/queryautocomplete/json":{"get":{"description":"The Query Autocomplete service can be used to provide a query prediction for text-based geographic searches, by returning suggested queries as you type.\n\nThe Query Autocomplete service allows you to add on-the-fly geographic query predictions to your application. Instead of searching for a specific location, a user can type in a categorical search, such as \"pizza near New York\" and the service responds with a list of suggested queries matching the string. As the Query Autocomplete service can match on both full words and substrings, applications can send queries as the user types to provide on-the-fly predictions.\n","summary":"queryAutocomplete","tags":["Places API"],"operationId":"queryAutocomplete","deprecated":false,"produces":["application/json"],"parameters":[{"name":"input","in":"query","required":true,"type":"string","description":"The text string on which to search. The Place Autocomplete service will return candidate matches based on this string and order results based on their perceived relevance."},{"name":"offset","in":"query","required":false,"type":"number","format":"double","description":"The position, in the input term, of the last character that the service uses to match predictions. For example, if the input is `Google` and the offset is 3, the service will match on `Goo`. The string determined by the offset is matched against the first word in the input term only. For example, if the input term is `Google abc` and the offset is 3, the service will attempt to match against `Goo abc`. If no offset is supplied, the service will use the whole term. The offset should generally be set to the position of the text caret."},{"name":"location","in":"query","required":false,"type":"string","description":"The point around which to retrieve place information. This must be specified as `latitude,longitude`. \n\n<div class=\"note\">The <code>location</code> parameter may be overriden if the <code>query</code> contains an explicit location such as <code>Market in Barcelona</code>. Using quotes around the query may also influence the weight given to the <code>location</code> and <code>radius</code>.</div>"},{"name":"radius","in":"query","required":false,"type":"number","format":"double","description":"Defines the distance (in meters) within which to return place results. You may bias results to a specified circle by passing a `location` and a `radius` parameter. Doing so instructs the Places service to _prefer_ showing results within that circle; results outside of the defined area may still be displayed.\n\nThe radius will automatically be clamped to a maximum value depending on the type of search and other parameters.\n\n* Autocomplete: 50,000 meters\n* Nearby Search: \n  * with `keyword` or `name`: 50,000 meters\n  * without `keyword` or `name`\n    * Up to 50,000 meters, adjusted dynamically based on area density, independent of `rankby` parameter.\n    * When using `rankby=distance`, the radius parameter will not be accepted, and will result in an `INVALID_REQUEST`.\n* Query Autocomplete: 50,000 meters\n* Text Search: 50,000 meters"},{"name":"language","in":"query","required":false,"enum":["ar","bg","bn","ca","cs","da","de","el","en","en-AU","en-GB","es","eu","fa","fi","fil","fr","gl","gu","hi","hr","hu","id","it","iw","ja","kn","ko","lt","lv","ml","mr","nl","no","pl","pt","pt-BR","pt-PT","ro","ru","sk","sl","sr","sv","ta","te","th","tl","tr","uk","vi","zh-CN","zh-TW"],"default":"en","type":"string","description":"The language in which to return results.\n\n* See the [list of supported languages](https://developers.google.com/maps/faq#languagesupport). Google often updates the supported languages, so this list may not be exhaustive.\n* If `language` is not supplied, the API attempts to use the preferred language as specified in the `Accept-Language` header.\n* The API does its best to provide a street address that is readable for both the user and locals. To achieve that goal, it returns street addresses in the local language, transliterated to a script readable by the user if necessary, observing the preferred language. All other addresses are returned in the preferred language. Address components are all returned in the same language, which is chosen from the first component.\n* If a name is not available in the preferred language, the API uses the closest match.\n* The preferred language has a small influence on the set of results that the API chooses to return, and the order in which they are returned. The geocoder interprets abbreviations differently depending on language, such as the abbreviations for street types, or synonyms that may be valid in one language but not in another. For example, _utca_ and _t√©r_ are synonyms for street in Hungarian."}],"responses":{"200":{"description":"200 OK","schema":{"$ref":"#/definitions/PlacesQueryAutocompleteResponse"},"examples":{"application/json":{"predictions":[{"description":"pizza near Paris, France","matched_substrings":[{"length":5,"offset":0},{"length":3,"offset":11}],"structured_formatting":{"main_text":"pizza","main_text_matched_substrings":[{"length":5,"offset":0}],"secondary_text":"near Paris, France","secondary_text_matched_substrings":[{"length":3,"offset":5}]},"terms":[{"offset":0,"value":"pizza"},{"offset":6,"value":"near"},{"offset":11,"value":"Paris"},{"offset":18,"value":"France"}]},{"description":"pizza near Pari Chowk, NRI City, Omega II, Noida, Uttar Pradesh, India","matched_substrings":[{"length":5,"offset":0},{"length":3,"offset":11}],"structured_formatting":{"main_text":"pizza","main_text_matched_substrings":[{"length":5,"offset":0}],"secondary_text":"near Pari Chowk, NRI City, Omega II, Noida, Uttar Pradesh, India","secondary_text_matched_substrings":[{"length":3,"offset":5}]},"terms":[{"offset":0,"value":"pizza"},{"offset":6,"value":"near"},{"offset":11,"value":"Pari Chowk"},{"offset":23,"value":"NRI City"},{"offset":33,"value":"Omega II"},{"offset":43,"value":"Noida"},{"offset":50,"value":"Uttar Pradesh"},{"offset":65,"value":"India"}]},{"description":"pizza near Disneyland Park, Disneyland Drive, Anaheim, CA, USA","matched_substrings":[{"length":5,"offset":0},{"length":3,"offset":22}],"structured_formatting":{"main_text":"pizza","main_text_matched_substrings":[{"length":5,"offset":0}],"secondary_text":"near Disneyland Park, Disneyland Drive, Anaheim, CA, USA","secondary_text_matched_substrings":[{"length":3,"offset":16}]},"terms":[{"offset":0,"value":"pizza"},{"offset":6,"value":"near"},{"offset":11,"value":"Disneyland Park"},{"offset":28,"value":"Disneyland Drive"},{"offset":46,"value":"Anaheim"},{"offset":55,"value":"CA"},{"offset":59,"value":"USA"}]},{"description":"pizza near Cath√©drale Notre-Dame de Paris, Parvis Notre-Dame - place Jean-Paul-II, Paris, France","matched_substrings":[{"length":5,"offset":0},{"length":3,"offset":36}],"structured_formatting":{"main_text":"pizza","main_text_matched_substrings":[{"length":5,"offset":0}],"secondary_text":"near Cath√©drale Notre-Dame de Paris, Parvis Notre-Dame - place Jean-Paul-II, Paris, France","secondary_text_matched_substrings":[{"length":3,"offset":30}]},"terms":[{"offset":0,"value":"pizza"},{"offset":6,"value":"near"},{"offset":11,"value":"Cath√©drale Notre-Dame de Paris"},{"offset":43,"value":"Parvis Notre-Dame - place Jean-Paul-II"},{"offset":83,"value":"Paris"},{"offset":90,"value":"France"}]},{"description":"pizza near Paris Beauvais Airport, Route de l'A√©roport, Till√©, France","matched_substrings":[{"length":5,"offset":0},{"length":3,"offset":11}],"structured_formatting":{"main_text":"pizza","main_text_matched_substrings":[{"length":5,"offset":0}],"secondary_text":"near Paris Beauvais Airport, Route de l'A√©roport, Till√©, France","secondary_text_matched_substrings":[{"length":3,"offset":5}]},"terms":[{"offset":0,"value":"pizza"},{"offset":6,"value":"near"},{"offset":11,"value":"Paris Beauvais Airport"},{"offset":35,"value":"Route de l'A√©roport"},{"offset":56,"value":"Till√©"},{"offset":63,"value":"France"}]}],"status":"OK"}},"headers":{}}}}},"/maps/api/place/autocomplete/json":{"get":{"description":"The Place Autocomplete service is a web service that returns place predictions in response to an HTTP request. The request specifies a textual search string and optional geographic bounds. The service can be used to provide autocomplete functionality for text-based geographic searches, by returning places such as businesses, addresses and points of interest as a user types.\n<div class=\"note\">Note: You can use Place Autocomplete even without a map. If you do show a map, it must be a Google map. When you display predictions from the Place Autocomplete service without a map, you must include the ['Powered by Google'](https://developers.google.com/maps/documentation/places/web-service/policies#logo_requirementshttps://developers.google.com/maps/documentation/places/web-service/policies#logo_requirements) logo.</div>\n\nThe Place Autocomplete service can match on full words and substrings, resolving place names, addresses, and plus codes. Applications can therefore send queries as the user types, to provide on-the-fly place predictions.\n\nThe returned predictions are designed to be presented to the user to aid them in selecting the desired place. You can send a [Place Details](https://developers.google.com/maps/documentation/places/web-service/details#PlaceDetailsRequests) request for more information about any of the places which are returned.\n","summary":"autocomplete","tags":["Places API"],"operationId":"autocomplete","deprecated":false,"produces":["application/json"],"parameters":[{"name":"input","in":"query","required":true,"type":"string","description":"The text string on which to search. The Place Autocomplete service will return candidate matches based on this string and order results based on their perceived relevance."},{"name":"sessiontoken","in":"query","required":false,"type":"string","description":"A random string which identifies an autocomplete [session](https://developers.google.com/maps/documentation/places/web-service/details#session_tokens) for billing purposes.\n\nThe session begins when the user starts typing a query, and concludes when they select a place and a call to Place Details is made. Each session can have multiple queries, followed by one place selection. The API key(s) used for each request within a session must belong to the same Google Cloud Console project. Once a session has concluded, the token is no longer valid; your app must generate a fresh token for each session. If the `sessiontoken` parameter is omitted, or if you reuse a session token, the session is charged as if no session token was provided (each request is billed separately).\n\nWe recommend the following guidelines:\n\n- Use session tokens for all autocomplete sessions.\n- Generate a fresh token for each session. Using a version 4 UUID is recommended.\n- Ensure that the API key(s) used for all Place Autocomplete and Place Details requests within a session belong to the same Cloud Console project.\n- Be sure to pass a unique session token for each new session. Using the same token for more than one session will result in each request being billed individually."},{"name":"components","in":"query","required":false,"type":"string","description":"A grouping of places to which you would like to restrict your results. Currently, you can use components to filter by up to 5 countries. Countries must be passed as a two character, ISO 3166-1 Alpha-2 compatible country code. For example: `components=country:fr` would restrict your results to places within France. Multiple countries must be passed as multiple `country:XX` filters, with the pipe character `|` as a separator. For example: `components=country:us|country:pr|country:vi|country:gu|country:mp` would restrict your results to places within the United States and its unincorporated organized territories.\n<div class=\"note\"><strong>Note:</strong> If you receive unexpected results with a country code, verify that you are using a code which includes the countries, dependent territories, and special areas of geographical interest you intend.  You can find code information at <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes\" target=\"blank\" class=\"external\">Wikipedia: List of ISO 3166 country codes</a> or the <a href=\"https://www.iso.org/obp/ui/#search\" target=\"blank\" class=\"external\">ISO Online Browsing Platform</a>.</div>"},{"name":"strictbounds","in":"query","required":false,"type":"boolean","description":"Returns only those places that are strictly within the region defined by `location` and `radius`. This is a restriction, rather than a bias, meaning that results outside this region will not be returned even if they match the user input."},{"name":"offset","in":"query","required":false,"type":"number","format":"double","description":"The position, in the input term, of the last character that the service uses to match predictions. For example, if the input is `Google` and the offset is 3, the service will match on `Goo`. The string determined by the offset is matched against the first word in the input term only. For example, if the input term is `Google abc` and the offset is 3, the service will attempt to match against `Goo abc`. If no offset is supplied, the service will use the whole term. The offset should generally be set to the position of the text caret."},{"name":"origin","in":"query","required":false,"type":"string","description":"The origin point from which to calculate straight-line distance to the destination (returned as `distance_meters`). If this value is omitted, straight-line distance will not be returned. Must be specified as `latitude,longitude`."},{"name":"location","in":"query","required":false,"type":"string","description":"The point around which to retrieve place information. This must be specified as `latitude,longitude`. \n\n<div class=\"note\">When using the Text Search API, the `location` parameter may be overriden if the `query` contains an explicit location such as `Market in Barcelona`.</div>"},{"name":"radius","in":"query","required":false,"type":"number","format":"double","description":"Defines the distance (in meters) within which to return place results. You may bias results to a specified circle by passing a `location` and a `radius` parameter. Doing so instructs the Places service to _prefer_ showing results within that circle; results outside of the defined area may still be displayed.\n\nThe radius will automatically be clamped to a maximum value depending on the type of search and other parameters.\n\n* Autocomplete: 50,000 meters\n* Nearby Search: \n  * with `keyword` or `name`: 50,000 meters\n  * without `keyword` or `name`\n    * Up to 50,000 meters, adjusted dynamically based on area density, independent of `rankby` parameter.\n    * When using `rankby=distance`, the radius parameter will not be accepted, and will result in an `INVALID_REQUEST`.\n* Query Autocomplete: 50,000 meters\n* Text Search: 50,000 meters"},{"name":"types","in":"query","required":false,"type":"string","description":"You can restrict results from a Place Autocomplete request to be of a certain type by passing the `types` parameter. This parameter specifies a type or a type collection, as listed in [Place Types](/maps/documentation/places/web-service/supported_types). If nothing is specified, all types are returned.\n\nFor the value of the `types` parameter you can specify either:\n* Up to five values from [Table 1](/maps/documentation/places/web-service/supported_types#table1) or [Table 2](/maps/documentation/places/web-service/supported_types#table2). For multiple values, separate each value with a `|` (vertical bar). For example:\n\n  `types=book_store|cafe`\n\n* Any supported filter in [Table 3](/maps/documentation/places/web-service/supported_types#table3). You can safely mix the `geocode` and `establishment` types. You cannot mix type collections (`address`, `(cities)` or `(regions)`) with any other type, or an error occurs.\n\nThe request will be rejected with an `INVALID_REQUEST` error if:\n\n* More than five types are specified.\n* Any unrecognized types are present.\n* Any types from in [Table 1](/maps/documentation/places/web-service/supported_types#table1) or [Table 2](/maps/documentation/places/web-service/supported_types#table2) are mixed with any of the filters in [Table 3](/maps/documentation/places/web-service/supported_types#table3)."},{"name":"language","in":"query","required":false,"enum":["ar","bg","bn","ca","cs","da","de","el","en","en-AU","en-GB","es","eu","fa","fi","fil","fr","gl","gu","hi","hr","hu","id","it","iw","ja","kn","ko","lt","lv","ml","mr","nl","no","pl","pt","pt-BR","pt-PT","ro","ru","sk","sl","sr","sv","ta","te","th","tl","tr","uk","vi","zh-CN","zh-TW"],"default":"en","type":"string","description":"The language in which to return results.\n\n* See the [list of supported languages](https://developers.google.com/maps/faq#languagesupport). Google often updates the supported languages, so this list may not be exhaustive.\n* If `language` is not supplied, the API attempts to use the preferred language as specified in the `Accept-Language` header.\n* The API does its best to provide a street address that is readable for both the user and locals. To achieve that goal, it returns street addresses in the local language, transliterated to a script readable by the user if necessary, observing the preferred language. All other addresses are returned in the preferred language. Address components are all returned in the same language, which is chosen from the first component.\n* If a name is not available in the preferred language, the API uses the closest match.\n* The preferred language has a small influence on the set of results that the API chooses to return, and the order in which they are returned. The geocoder interprets abbreviations differently depending on language, such as the abbreviations for street types, or synonyms that may be valid in one language but not in another. For example, _utca_ and _t√©r_ are synonyms for street in Hungarian."},{"name":"region","in":"query","required":false,"enum":["ac","ad","ae","af","ag","ai","al","am","an","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bl","bm","bn","bo","bq","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","en","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mf","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tp","tr","tt","tv","tw","tz","ua","ug","uk","um","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"],"default":"en","type":"string","description":"The region code, specified as a [ccTLD (\"top-level domain\")](https://en.wikipedia.org/wiki/List_of_Internet_top-level_domains#Country_code_top-level_domains) two-character value. Most ccTLD codes are identical to ISO 3166-1 codes, with some notable exceptions. For example, the United Kingdom's ccTLD is \"uk\" (.co.uk) while its ISO 3166-1 code is \"gb\" (technically for the entity of \"The United Kingdom of Great Britain and Northern Ireland\")."}],"responses":{"200":{"description":"200 OK","schema":{"$ref":"#/definitions/PlacesAutocompleteResponse"},"examples":{"application/json":{"predictions":[{"description":"Paris, France","matched_substrings":[{"length":5,"offset":0}],"place_id":"ChIJD7fiBh9u5kcRYJSMaMOCCwQ","reference":"ChIJD7fiBh9u5kcRYJSMaMOCCwQ","structured_formatting":{"main_text":"Paris","main_text_matched_substrings":[{"length":5,"offset":0}],"secondary_text":"France"},"terms":[{"offset":0,"value":"Paris"},{"offset":7,"value":"France"}],"types":["locality","political","geocode"]},{"description":"Paris, TX, USA","matched_substrings":[{"length":5,"offset":0}],"place_id":"ChIJmysnFgZYSoYRSfPTL2YJuck","reference":"ChIJmysnFgZYSoYRSfPTL2YJuck","structured_formatting":{"main_text":"Paris","main_text_matched_substrings":[{"length":5,"offset":0}],"secondary_text":"TX, USA"},"terms":[{"offset":0,"value":"Paris"},{"offset":7,"value":"TX"},{"offset":11,"value":"USA"}],"types":["locality","political","geocode"]},{"description":"Paris, TN, USA","matched_substrings":[{"length":5,"offset":0}],"place_id":"ChIJ4zHP-Sije4gRBDEsVxunOWg","reference":"ChIJ4zHP-Sije4gRBDEsVxunOWg","structured_formatting":{"main_text":"Paris","main_text_matched_substrings":[{"length":5,"offset":0}],"secondary_text":"TN, USA"},"terms":[{"offset":0,"value":"Paris"},{"offset":7,"value":"TN"},{"offset":11,"value":"USA"}],"types":["locality","political","geocode"]},{"description":"Paris, Brant, ON, Canada","matched_substrings":[{"length":5,"offset":0}],"place_id":"ChIJsamfQbVtLIgR-X18G75Hyi0","reference":"ChIJsamfQbVtLIgR-X18G75Hyi0","structured_formatting":{"main_text":"Paris","main_text_matched_substrings":[{"length":5,"offset":0}],"secondary_text":"Brant, ON, Canada"},"terms":[{"offset":0,"value":"Paris"},{"offset":7,"value":"Brant"},{"offset":14,"value":"ON"},{"offset":18,"value":"Canada"}],"types":["neighborhood","political","geocode"]},{"description":"Paris, KY, USA","matched_substrings":[{"length":5,"offset":0}],"place_id":"ChIJsU7_xMfKQ4gReI89RJn0-RQ","reference":"ChIJsU7_xMfKQ4gReI89RJn0-RQ","structured_formatting":{"main_text":"Paris","main_text_matched_substrings":[{"length":5,"offset":0}],"secondary_text":"KY, USA"},"terms":[{"offset":0,"value":"Paris"},{"offset":7,"value":"KY"},{"offset":11,"value":"USA"}],"types":["locality","political","geocode"]}],"status":"OK"}},"headers":{}}}}}},"definitions":{"Bounds":{"title":"Bounds","description":"A rectangle in geographical coordinates from points at the southwest and northeast corners.","type":"object","properties":{"northeast":{"$ref":"#/definitions/LatLngLiteral"},"southwest":{"$ref":"#/definitions/LatLngLiteral"}},"required":["northeast","southwest"]},"LatLngLiteral":{"title":"LatLngLiteral","description":"An object describing a specific location with Latitude and Longitude in decimal degrees.","type":"object","properties":{"lat":{"description":"Latitude in decimal degrees","type":"number","format":"double"},"lng":{"description":"Longitude in decimal degrees","type":"number","format":"double"}},"required":["lat","lng"]},"LatitudeLongitudeLiteral":{"title":"LatitudeLongitudeLiteral","description":"An object describing a specific location with Latitude and Longitude in decimal degrees.","type":"object","properties":{"latitude":{"description":"Latitude in decimal degrees","type":"number","format":"double"},"longitude":{"description":"Longitude in decimal degrees","type":"number","format":"double"}},"required":["latitude","longitude"]},"AddressComponent":{"title":"AddressComponent","type":"object","properties":{"long_name":{"description":"The full text description or name of the address component as returned by the Geocoder.","example":"Council of the City of Sydney","type":"string"},"short_name":{"description":"An abbreviated textual name for the address component, if available. For example, an address component for the state of Alaska may have a long_name of \"Alaska\" and a short_name of \"AK\" using the 2-letter postal abbreviation.","example":"Sydney","type":"string"},"types":{"description":"An array indicating the type of the address component. See the list of [supported types](https://developers.google.com/maps/documentation/places/web-service/supported_types).","example":["administrative_area_level_2","political"],"type":"array","items":{"type":"string"}}},"required":["long_name","short_name","types"]},"Fare":{"title":"Fare","description":"The total fare for the route.\n\n```\n{\n  \"currency\" : \"USD\",\n  \"value\" : 6,\n  \"text\" : \"$6.00\"\n}\n```","type":"object","properties":{"currency":{"description":"An [ISO 4217 currency code](https://en.wikipedia.org/wiki/ISO_4217) indicating the currency that the amount is expressed in.","example":"USD","type":"string"},"value":{"description":"The total fare amount, in the currency specified.","type":"number","format":"double"},"text":{"description":"The total fare amount, formatted in the requested language.","example":"$6.00","type":"string"}},"required":["currency","value","text"]},"Geometry":{"title":"Geometry","description":"An object describing the location.","type":"object","properties":{"location":{"$ref":"#/definitions/LatLngLiteral"},"viewport":{"$ref":"#/definitions/Bounds"}},"required":["location","viewport"]},"PlusCode":{"title":"PlusCode","description":"An encoded location reference, derived from latitude and longitude coordinates, that represents an area, 1/8000th of a degree by 1/8000th of a degree (about 14m x 14m at the equator) or smaller. Plus codes can be used as a replacement for street addresses in places where they do not exist (where buildings are not numbered or streets are not named).","externalDocs":{"url":"https://plus.codes/","description":"Site describing Plus Codes."},"type":"object","properties":{"compound_code":{"description":"The `compound_code` is a 6 character or longer local code with an explicit location (`CWC8+R9, Mountain View, CA, USA`). Some APIs may return an empty string if the `compound_code` is not available.","type":"string"},"global_code":{"description":"The `global_code` is a 4 character area code and 6 character or longer local code (`849VCWC8+R9`).","type":"string"}},"required":["global_code"]},"TravelMode":{"title":"TravelMode","description":"- `DRIVING` (default) indicates calculation using the road network.\n- `BICYCLING` requests calculation for bicycling via bicycle paths & preferred streets (where available).\n- `TRANSIT` requests calculation via public transit routes (where available). \n- `WALKING` requests calculation for walking via pedestrian paths & sidewalks (where available).","type":"string","enum":["DRIVING","BICYCLING","TRANSIT","WALKING"]},"TextValueObject":{"title":"TextValueObject","description":"An object containing a numeric value and its formatted text representation.","type":"object","properties":{"text":{"description":"String value.","type":"string"},"value":{"description":"Numeric value.","type":"number","format":"double"}},"required":["text","value"]},"TimeZoneTextValueObject":{"title":"TimeZoneTextValueObject","description":"An object containing Unix time, a time zone, and its formatted text representation.","type":"object","properties":{"text":{"description":"The time specified as a string in the time zone.","type":"string"},"value":{"description":"The time specified as Unix time, or seconds since midnight, January 1, 1970 UTC.","type":"number","format":"double"},"time_zone":{"description":"Contains the time zone. The value is the name of the time zone as defined in the [IANA Time Zone Database](http://www.iana.org/time-zones), e.g. \"America/New_York\".","type":"string"}},"required":["text","value","time_zone"]},"DistanceMatrixElementStatus":{"title":"DistanceMatrixElementStatus","description":"- `OK` indicates the response contains a valid result.\n- `NOT_FOUND` indicates that the origin and/or destination of this pairing could not be geocoded.\n- `ZERO_RESULTS` indicates no route could be found between the origin and destination.\n- `MAX_ROUTE_LENGTH_EXCEEDED` indicates the requested route is too long and cannot be processed.","type":"string","enum":["OK","NOT_FOUND","ZERO_RESULTS","MAX_ROUTE_LENGTH_EXCEEDED"]},"DistanceMatrixResponse":{"title":"DistanceMatrixResponse","type":"object","properties":{"origin_addresses":{"description":"An array of addresses as returned by the API from your original request. These are formatted by the geocoder and localized according to the language parameter passed with the request. This content is meant to be read as-is. Do not programatically parse the formatted addresses.","type":"array","items":{"type":"string"}},"destination_addresses":{"description":"An array of addresses as returned by the API from your original request. As with `origin_addresses`, these are localized if appropriate. This content is meant to be read as-is. Do not programatically parse the formatted addresses.","type":"array","items":{"type":"string"}},"rows":{"description":"An array of elements, which in turn each contain a `status`, `duration`, and `distance` element.","type":"array","items":{"$ref":"#/definitions/DistanceMatrixRow"}},"status":{"$ref":"#/definitions/DistanceMatrixStatus"},"error_message":{"description":"A string containing the human-readable text of any errors encountered while the request was being processed.","example":"You have exceeded your rate-limit for this API.","type":"string"}},"required":["origin_addresses","destination_addresses","rows","status"]},"DistanceMatrixRow":{"title":"DistanceMatrixRow","type":"object","properties":{"elements":{"description":"When the Distance Matrix API returns results, it places them within a JSON rows array. Even if no results are returned (such as when the origins and/or destinations don't exist), it still returns an empty array. \n\nRows are ordered according to the values in the origin parameter of the request. Each row corresponds to an origin, and each element within that row corresponds to a pairing of the origin with a destination value.\n\nEach row array contains one or more element entries, which in turn contain the information about a single origin-destination pairing.","type":"array","items":{"$ref":"#/definitions/DistanceMatrixElement"}}},"required":["elements"]},"DistanceMatrixElement":{"title":"DistanceMatrixElement","type":"object","properties":{"fare":{"$ref":"#/definitions/Fare"},"distance":{"$ref":"#/definitions/TextValueObject"},"duration_in_traffic":{"$ref":"#/definitions/TextValueObject"},"duration":{"$ref":"#/definitions/TextValueObject"},"status":{"$ref":"#/definitions/DistanceMatrixElementStatus"}},"required":["status"]},"DistanceMatrixStatus":{"title":"DistanceMatrixStatus","description":"Status codes returned by service.\n- `OK` indicates the response contains a valid result.\n- `INVALID_REQUEST` indicates that the provided request was invalid.\n- `MAX_ELEMENTS_EXCEEDED` indicates that the product of origins and destinations exceeds the per-query limit.\n- `MAX_DIMENSIONS_EXCEEDED` indicates that the number of origins or destinations exceeds the per-query limit.\n- `OVER_DAILY_LIMIT` indicates any of the following:\n  - The API key is missing or invalid.\n  - Billing has not been enabled on your account.\n  - A self-imposed usage cap has been exceeded.\n  - The provided method of payment is no longer valid (for example, a credit card has expired).\n- `OVER_QUERY_LIMIT` indicates the service has received too many requests from your application within the allowed time period.\n- `REQUEST_DENIED` indicates that the service denied use of the Distance Matrix service by your application.\n- `UNKNOWN_ERROR` indicates a Distance Matrix request could not be processed due to a server error. The request may succeed if you try again.","type":"string","enum":["OK","INVALID_REQUEST","MAX_ELEMENTS_EXCEEDED","MAX_DIMENSIONS_EXCEEDED","OVER_DAILY_LIMIT","OVER_QUERY_LIMIT","REQUEST_DENIED","UNKNOWN_ERROR"]},"DirectionsResponse":{"title":"DirectionsResponse","type":"object","properties":{"geocoded_waypoints":{"description":"Contains an array with details about the geocoding of origin, destination and waypoints. Elements in the geocoded_waypoints array correspond, by their zero-based position, to the origin, the waypoints in the order they are specified, and the destination.\n\nThese details will not be present for waypoints specified as textual latitude/longitude values if the service returns no results. This is because such waypoints are only reverse geocoded to obtain their representative address after a route has been found. An empty JSON object will occupy the corresponding places in the geocoded_waypoints array.","type":"array","items":{"$ref":"#/definitions/DirectionsGeocodedWaypoint"}},"routes":{"description":"Contains an array of routes from the origin to the destination. Routes consist of nested Legs and Steps.","type":"array","items":{"$ref":"#/definitions/DirectionsRoute"}},"status":{"$ref":"#/definitions/DirectionsStatus"},"available_travel_modes":{"description":"Contains an array of available travel modes. This field is returned when a request specifies a travel mode and gets no results. The array contains the available travel modes in the countries of the given set of waypoints. This field is not returned if one or more of the waypoints are 'via waypoints'.","type":"array","items":{"$ref":"#/definitions/TravelMode"}},"error_message":{"description":"When the service returns a status code other than `OK`, there may be an additional `error_message` field within the response object. This field contains more detailed information about the reasons behind the given status code. This field is not always returned, and its content is subject to change.","type":"string"}},"required":["routes","status"]},"DirectionsStep":{"title":"DirectionsStep","description":"Each element in the steps array defines a single step of the calculated directions. A step is the most atomic unit of a direction's route, containing a single step describing a specific, single instruction on the journey. E.g. \"Turn left at W. 4th St.\" The step not only describes the instruction but also contains distance and duration information relating to how this step relates to the following step. For example, a step denoted as \"Merge onto I-80 West\" may contain a duration of \"37 miles\" and \"40 minutes,\" indicating that the next step is 37 miles/40 minutes from this step.\n\nWhen using the Directions API to search for transit directions, the steps array will include additional transit details in the form of a transit_details array. If the directions include multiple modes of transportation, detailed directions will be provided for walking or driving steps in an inner steps array. For example, a walking step will include directions from the start and end locations: \"Walk to Innes Ave & Fitch St\". That step will include detailed walking directions for that route in the inner steps array, such as: \"Head north-west\", \"Turn left onto Arelious Walker\", and \"Turn left onto Innes Ave\".","type":"object","properties":{"distance":{"$ref":"#/definitions/TextValueObject"},"duration":{"$ref":"#/definitions/TextValueObject"},"end_location":{"$ref":"#/definitions/LatLngLiteral"},"html_instructions":{"description":"Contains formatted instructions for this step, presented as an HTML text string. This content is meant to be read as-is. Do not programmatically parse this display-only content.","type":"string"},"maneuver":{"$ref":"#/definitions/Maneuver"},"polyline":{"$ref":"#/definitions/DirectionsPolyline"},"start_location":{"$ref":"#/definitions/LatLngLiteral"},"transit_details":{"$ref":"#/definitions/DirectionsTransitDetails"},"travel_mode":{"$ref":"#/definitions/TravelMode"},"steps":{"description":"Contains detailed directions for walking or driving steps in transit directions. Substeps are only available when travel_mode is set to \"transit\". The inner steps array is of the same type as steps."}},"required":["duration","end_location","html_instructions","polyline","start_location","travel_mode"]},"DirectionsLeg":{"title":"DirectionsLeg","type":"object","properties":{"arrival_time":{"$ref":"#/definitions/TimeZoneTextValueObject"},"departure_time":{"$ref":"#/definitions/TimeZoneTextValueObject"},"distance":{"$ref":"#/definitions/TextValueObject"},"duration":{"$ref":"#/definitions/TextValueObject"},"duration_in_traffic":{"$ref":"#/definitions/TextValueObject"},"end_address":{"description":"Contains the human-readable address (typically a street address) from reverse geocoding the `end_location` of this leg. This content is meant to be read as-is. Do not programmatically parse the formatted address.","type":"string"},"end_location":{"$ref":"#/definitions/LatLngLiteral"},"start_address":{"description":"Contains the human-readable address (typically a street address) resulting from reverse geocoding the `start_location` of this leg. This content is meant to be read as-is. Do not programmatically parse the formatted address.","type":"string"},"start_location":{"$ref":"#/definitions/LatLngLiteral"},"steps":{"description":"An array of steps denoting information about each separate step of the leg of the journey.","type":"array","items":{"$ref":"#/definitions/DirectionsStep"}},"traffic_speed_entry":{"description":"Information about traffic speed along the leg.","type":"array","items":{"$ref":"#/definitions/DirectionsTrafficSpeedEntry"}},"via_waypoint":{"description":"The locations of via waypoints along this leg.","type":"array","items":{"$ref":"#/definitions/DirectionsViaWaypoint"}}},"required":["end_address","end_location","start_address","start_location","steps","traffic_speed_entry","via_waypoint"]},"DirectionsRoute":{"title":"DirectionsRoute","description":"Routes consist of nested `legs` and `steps`.","type":"object","properties":{"legs":{"description":"An array which contains information about a leg of the route, between two locations within the given route. A separate leg will be present for each waypoint or destination specified. (A route with no waypoints will contain exactly one leg within the legs array.) Each leg consists of a series of steps.","type":"array","items":{"$ref":"#/definitions/DirectionsLeg"}},"bounds":{"$ref":"#/definitions/Bounds"},"copyrights":{"description":"Contains an array of warnings to be displayed when showing these directions. You must handle and display these warnings yourself.","type":"string"},"summary":{"description":"Contains a short textual description for the route, suitable for naming and disambiguating the route from alternatives.","type":"string"},"waypoint_order":{"description":"An array indicating the order of any waypoints in the calculated route. This waypoints may be reordered if the request was passed optimize:true within its waypoints parameter.","type":"array","items":{"type":"integer","format":"int32"}},"warnings":{"description":"Contains an array of warnings to be displayed when showing these directions. You must handle and display these warnings yourself.","type":"array","items":{"type":"string"}},"overview_polyline":{"$ref":"#/definitions/DirectionsPolyline"},"fare":{"$ref":"#/definitions/Fare"}},"required":["legs","bounds","copyrights","summary","waypoint_order","warnings","overview_polyline"]},"DirectionsStatus":{"title":"DirectionsStatus","description":"The status field within the Directions response object contains the status of the request, and may contain debugging information to help you track down why the Directions service failed. The status field may contain the following values:\n\n- `OK` indicates the response contains a valid result.\n- `NOT_FOUND` indicates at least one of the locations specified in the request's origin, destination, or waypoints could not be geocoded.\n- `ZERO_RESULTS` indicates no route could be found between the origin and destination.\n- `MAX_WAYPOINTS_EXCEEDED` indicates that too many waypoints were provided in the request. For applications using the Directions API as a web service, or the directions service in the Maps JavaScript API, the maximum allowed number of waypoints is 25, plus the origin and destination.\n- `MAX_ROUTE_LENGTH_EXCEEDED` indicates the requested route is too long and cannot be processed. This error occurs when more complex directions are returned. Try reducing the number of waypoints, turns, or instructions.\n- `INVALID_REQUEST` indicates that the provided request was invalid. Common causes of this status include an invalid parameter or parameter value.\n- `OVER_DAILY_LIMIT` indicates any of the following:\n    - The API key is missing or invalid.\n    - Billing has not been enabled on your account.\n    - A self-imposed usage cap has been exceeded.\n    - The provided method of payment is no longer valid (for example, a credit card has expired).\n    See the [Maps FAQ](https://developers.google.com/maps/faq#over-limit-key-error) to learn how to fix this.\n- `OVER_QUERY_LIMIT` indicates the service has received too many requests from your application within the allowed time period.\n- `REQUEST_DENIED` indicates that the service denied use of the directions service by your application.\n- `UNKNOWN_ERROR` indicates a directions request could not be processed due to a server error. The request may succeed if you try again.","type":"string","enum":["OK","NOT_FOUND","ZERO_RESULTS","MAX_WAYPOINTS_EXCEEDED","MAX_ROUTE_LENGTH_EXCEEDED","INVALID_REQUEST","OVER_DAILY_LIMIT","OVER_QUERY_LIMIT","REQUEST_DENIED","UNKNOWN_ERROR"]},"DirectionsGeocodedWaypoint":{"title":"DirectionsGeocodedWaypoint","type":"object","properties":{"geocoder_status":{"$ref":"#/definitions/GeocoderStatus"},"partial_match":{"description":"Indicates that the geocoder did not return an exact match for the original request, though it was able to match part of the requested address. You may wish to examine the original request for misspellings and/or an incomplete address.\n\nPartial matches most often occur for street addresses that do not exist within the locality you pass in the request. Partial matches may also be returned when a request matches two or more locations in the same locality. For example, \"21 Henr St, Bristol, UK\" will return a partial match for both Henry Street and Henrietta Street. Note that if a request includes a misspelled address component, the geocoding service may suggest an alternative address. Suggestions triggered in this way will also be marked as a partial match."},"place_id":{"description":"A unique identifier that can be used with other Google APIs. See the [Place ID overview](https://developers.google.com/maps/documentation/places/web-service/place-id).","type":"string"},"types":{"description":"Indicates the address type of the geocoding result used for calculating directions.\n\n* `administrative_area_level_1` indicates a first-order civil entity below the country level. Within the United States, these administrative levels are states. Not all nations exhibit these administrative levels. In most cases, administrative_area_level_1 short names will closely match ISO 3166-2 subdivisions and other widely circulated lists; however this is not guaranteed as our geocoding results are based on a variety of signals and location data.\n* `administrative_area_level_2` indicates a second-order civil entity below the country level. Within the United States, these administrative levels are counties. Not all nations exhibit these administrative levels.\n* `administrative_area_level_3` indicates a third-order civil entity below the country level. This type indicates a minor civil division. Not all nations exhibit these administrative levels.\n* `administrative_area_level_4` indicates a fourth-order civil entity below the country level. This type indicates a minor civil division. Not all nations exhibit these administrative levels.\n* `administrative_area_level_5` indicates a fifth-order civil entity below the country level. This type indicates a minor civil division. Not all nations exhibit these administrative levels.\n* `airport` indicates an airport.\n* `colloquial_area` indicates a commonly-used alternative name for the entity.\n* `country` indicates the national political entity, and is typically the highest order type returned by the Geocoder.\n* `intersection` indicates a major intersection, usually of two major roads.\n* `locality` indicates an incorporated city or town political entity.\n* `natural_feature` indicates a prominent natural feature.\n* `neighborhood` indicates a named neighborhood\n* `park` indicates a named park.\n* `plus_code` indicates an encoded location reference, derived from latitude and longitude. Plus codes can be used as a replacement for street addresses in places where they do not exist (where buildings are not numbered or streets are not named). See [https://plus.codes](https://plus.codes/) for details.\n* `point_of_interest` indicates a named point of interest. Typically, these \"POI\"s are prominent local entities that don't easily fit in another category, such as \"Empire State Building\" or \"Eiffel Tower\".\n* `political` indicates a political entity. Usually, this type indicates a polygon of some civil administration.\n* `postal_code` indicates a postal code as used to address postal mail within the country.\n* `premise` indicates a named location, usually a building or collection of buildings with a common name\n* `route` indicates a named route (such as \"US 101\").\n* `street_address` indicates a precise street address.\n* `sublocality` indicates a first-order civil entity below a locality. For some locations may receive one of the additional types: sublocality_level_1 to sublocality_level_5. Each sublocality level is a civil entity. Larger numbers indicate a smaller geographic area.\n* `subpremise` indicates a first-order entity below a named location, usually a singular building within a collection of buildings with a common name\n* `tourist_attraction` indicates a tourist attraction.\n* `train_station` indicates a train station.\n* `transit_station` indicates a transit station.\n\nAn empty list of types indicates there are no known types for the particular address component, for example, Lieu-dit in France.","type":"array","items":{"$ref":"#/definitions/Type"}}}},"DirectionsPolyline":{"title":"DirectionsPolyline","description":"[Polyline encoding](https://developers.google.com/maps/documentation/utilities/polylinealgorithm) is a lossy compression algorithm that allows you to store a series of coordinates as a single string. Point coordinates are encoded using signed values. If you only have a few static points, you may also wish to use the interactive polyline encoding utility.\n\nThe encoding process converts a binary value into a series of character codes for ASCII characters using the familiar base64 encoding scheme: to ensure proper display of these characters, encoded values are summed with 63 (the ASCII character '?') before converting them into ASCII. The algorithm also checks for additional character codes for a given point by checking the least significant bit of each byte group; if this bit is set to 1, the point is not yet fully formed and additional data must follow.\n\nAdditionally, to conserve space, points only include the offset from the previous point (except of course for the first point). All points are encoded in Base64 as signed integers, as latitudes and longitudes are signed values. The encoding format within a polyline needs to represent two coordinates representing latitude and longitude to a reasonable precision. Given a maximum longitude of +/- 180 degrees to a precision of 5 decimal places (180.00000 to -180.00000), this results in the need for a 32 bit signed binary integer value.","type":"object","properties":{"points":{"description":"A single string representation of the polyline.","example":"chnwEbderQ?XR@D?@?","type":"string"}},"required":["points"]},"DirectionsTrafficSpeedEntry":{"title":"DirectionsTrafficSpeedEntry","type":"object","properties":{"speed_category":{"description":"The current traffic/speed conditions on this portion of a path.","type":"string"},"offset_meters":{"description":"The offset along the path (in meters) up to which this speed category is valid.","type":"number","format":"double"}},"required":["speed_category","offset_meters"]},"DirectionsTransitAgency":{"title":"DirectionsTransitAgency","type":"object","properties":{"name":{"description":"The name of this transit agency.","type":"string"},"phone":{"description":"The transit agency's phone number.","type":"string"},"url":{"description":"The transit agency's URL.","type":"string"}}},"DirectionsTransitDetails":{"title":"DirectionsTransitDetails","description":"Additional information that is not relevant for other modes of transportation.","type":"object","properties":{"arrival_stop":{"$ref":"#/definitions/DirectionsTransitStop"},"arrival_time":{"$ref":"#/definitions/TimeZoneTextValueObject"},"departure_stop":{"$ref":"#/definitions/DirectionsTransitStop"},"departure_time":{"$ref":"#/definitions/TimeZoneTextValueObject"},"headsign":{"description":"Specifies the direction in which to travel on this line, as it is marked on the vehicle or at the departure stop. This will often be the terminus station.","type":"string"},"headway":{"description":"Specifies the expected number of seconds between departures from the same stop at this time. For example, with a `headway` value of 600, you would expect a ten minute wait if you should miss your bus.","type":"integer","format":"int32"},"line":{"$ref":"#/definitions/DirectionsTransitLine"},"num_stops":{"description":"The number of stops from the departure to the arrival stop. This includes the arrival stop, but not the departure stop. For example, if your directions involve leaving from Stop A, passing through stops B and C, and arriving at stop D, `num_stops` will return 3.","type":"integer","format":"int32"},"trip_short_name":{"description":"The text that appears in schedules and sign boards to identify a transit trip to passengers. The text should uniquely identify a trip within a service day. For example, \"538\" is the `trip_short_name` of the Amtrak train that leaves San Jose, CA at 15:10 on weekdays to Sacramento, CA.","example":"538","type":"string"}}},"DirectionsTransitLine":{"title":"DirectionsTransitLine","type":"object","properties":{"agencies":{"description":"The transit agency (or agencies) that operates this transit line.","type":"array","items":{"$ref":"#/definitions/DirectionsTransitAgency"}},"color":{"description":"The color commonly used in signage for this line.","example":"#ce8e00","type":"string"},"name":{"description":"The full name of this transit line, e.g. \"8 Avenue Local\".","type":"string"},"short_name":{"description":"The short name of this transit line. This will normally be a line number, such as \"M7\" or \"355\".","type":"string"},"text_color":{"description":"The color commonly used in signage for this line.","example":"#121212","type":"string"},"url":{"description":"Contains the URL for this transit line as provided by the transit agency.","type":"string"},"icon":{"description":"Contains the URL for the icon associated with this line.","type":"string"},"vehicle":{"$ref":"#/definitions/DirectionsTransitVehicle"}},"required":["agencies","name"]},"DirectionsTransitStop":{"title":"DirectionsTransitStop","type":"object","properties":{"location":{"$ref":"#/definitions/LatLngLiteral"},"name":{"description":"The name of the transit stop.","type":"string"}},"required":["location","name"]},"DirectionsTransitVehicle":{"title":"DirectionsTransitVehicle","type":"object","properties":{"icon":{"description":"Contains the URL for an icon associated with this vehicle type.","type":"string"},"local_icon":{"description":"Contains the URL for the icon associated with this vehicle type, based on the local transport signage.","type":"string"},"name":{"description":"The name of this vehicle, capitalized.","example":"Train","type":"string"},"type":{"$ref":"#/definitions/Type1"}},"required":["name","type"]},"DirectionsViaWaypoint":{"title":"DirectionsViaWaypoint","type":"object","properties":{"location":{"$ref":"#/definitions/LatLngLiteral"},"step_index":{"description":"The index of the step containing the waypoint.","type":"integer","format":"int32"},"step_interpolation":{"description":"The position of the waypoint along the step's polyline, expressed as a ratio from 0 to 1.","type":"number","format":"double"}}},"ElevationResult":{"title":"ElevationResult","type":"object","properties":{"elevation":{"description":"The elevation of the location in meters.","type":"number","format":"double"},"resolution":{"description":"The value indicating the maximum distance between data points from which the elevation was interpolated, in meters. This property will be missing if the resolution is not known. Note that elevation data becomes more coarse (larger resolution values) when multiple points are passed. To obtain the most accurate elevation value for a point, it should be queried independently.","type":"number","format":"double"},"location":{"$ref":"#/definitions/LatLngLiteral"}},"required":["elevation","location"]},"ElevationResponse":{"title":"ElevationResponse","type":"object","properties":{"error_message":{"description":"When the service returns a status code other than `OK`, there may be an additional `error_message` field within the response object. This field contains more detailed information about thereasons behind the given status code. This field is not always returned, and its content is subject to change.","example":"Invalid request. Invalid 'locations' parameter.","type":"string"},"status":{"$ref":"#/definitions/ElevationStatus"},"results":{"type":"array","items":{"$ref":"#/definitions/ElevationResult"}}},"required":["status","results"]},"ElevationStatus":{"title":"ElevationStatus","description":"Status codes returned by service.\n- `OK` indicating the API request was successful.\n- `DATA_NOT_AVAILABLE` indicating that there's no available data for the input locations. \n- `INVALID_REQUEST` indicating the API request was malformed.\n- `OVER_DAILY_LIMIT` indicating any of the following:\n  - The API key is missing or invalid.\n  - Billing has not been enabled on your account.\n  - A self-imposed usage cap has been exceeded.\n  - The provided method of payment is no longer valid (for example, a credit card has expired).\n- `OVER_QUERY_LIMIT` indicating the requestor has exceeded quota.\n- `REQUEST_DENIED` indicating the API did not complete the request.\n- `UNKNOWN_ERROR` indicating an unknown error.","type":"string","enum":["OK","DATA_NOT_AVAILABLE","INVALID_REQUEST","OVER_DAILY_LIMIT","OVER_QUERY_LIMIT","REQUEST_DENIED","UNKNOWN_ERROR"]},"GeocodingResult":{"title":"GeocodingResult","type":"object","properties":{"address_components":{"description":"An array containing the separate components applicable to this address.","type":"array","items":{"$ref":"#/definitions/AddressComponent"}},"formatted_address":{"description":"The human-readable address of this location.","type":"string"},"geometry":{"$ref":"#/definitions/GeocodingGeometry"},"place_id":{"description":"A unique identifier that can be used with other Google APIs. For example, you can use the `place_id` in a Places API request to get details of a local business, such as phone number, opening hours, user reviews, and more. See the [place ID overview](https://developers.google.com/places/place-id).","type":"string"},"plus_code":{"$ref":"#/definitions/PlusCode"},"types":{"description":"The `types[]` array indicates the type of the returned result. This array contains a set of zero or more tags identifying the type of feature returned in the result. For example, a geocode of \"Chicago\" returns \"locality\" which indicates that \"Chicago\" is a city, and also returns \"political\" which indicates it is a political entity.","type":"array","items":{"type":"string"}},"postcode_localities":{"description":"An array denoting all the localities contained in a postal code. This is only present when the result is a postal code that contains multiple localities.","type":"array","items":{"type":"string"}},"partial_match":{"description":"Indicates that the geocoder did not return an exact match for the original request, though it was able to match part of the requested address. You may wish to examine the original request for misspellings and/or an incomplete address.\n\nPartial matches most often occur for street addresses that do not exist within the locality you pass in the request. Partial matches may also be returned when a request matches two or more locations in the same locality.","type":"boolean"}},"required":["address_components","formatted_address","geometry","place_id","types"]},"GeocodingResponse":{"title":"GeocodingResponse","type":"object","properties":{"plus_code":{"$ref":"#/definitions/PlusCode"},"results":{"type":"array","items":{"$ref":"#/definitions/GeocodingResult"}},"status":{"$ref":"#/definitions/GeocodingStatus"},"error_message":{"description":"A short description of the error.","example":"Invalid request. Missing the `address`, `components`, `latlng` or `place_id` parameter.","type":"string"}},"required":["results","status"]},"GeocodingStatus":{"title":"GeocodingStatus","description":"The `status` field within the Geocoding response object contains the status of the request, and may contain debugging information to help you track down why geocoding is not working. The \"status\" field may contain the following values:\n\n- `OK` indicates that no errors occurred; the address was successfully parsed and at least one geocode was returned.\n- `ZERO_RESULTS` indicates that the geocode was successful but returned no results. This may occur if the geocoder was passed a non-existent address or a `latlng` in a remote location.\n- `OVER_DAILY_LIMIT` indicates any of the following:\n  - The API key is missing or invalid.\n  - Billing has not been enabled on your account.\n  - A self-imposed usage cap has been exceeded.\n  - The provided method of payment is no longer valid (for example, a credit card has expired).\n- `OVER_QUERY_LIMIT` indicates that you are over your quota.\n- `REQUEST_DENIED` indicates that your request was denied.\n- `INVALID_REQUEST` generally indicates that the query (address, components, or latlng) is missing.\n- `UNKNOWN_ERROR` indicates that the request could not be processed due to a server error. The request may succeed if you try again.","type":"string","enum":["OK","INVALID_REQUEST","OVER_DAILY_LIMIT","OVER_QUERY_LIMIT","REQUEST_DENIED","UNKNOWN_ERROR","ZERO_RESULTS"]},"GeocodingGeometry":{"title":"GeocodingGeometry","description":"An object describing the location.","type":"object","properties":{"location":{"$ref":"#/definitions/LatLngLiteral"},"location_type":{"$ref":"#/definitions/LocationType"},"bounds":{"$ref":"#/definitions/Bounds"},"viewport":{"$ref":"#/definitions/Bounds"}},"required":["location","location_type","viewport"]},"GeolocationRequest":{"title":"GeolocationRequest","description":"The request body must be formatted as JSON. The following fields are supported, and all fields are optional.","type":"object","properties":{"homeMobileCountryCode":{"description":"The cell tower's Mobile Country Code (MCC).","type":"integer","format":"int32"},"homeMobileNetworkCode":{"description":"The cell tower's Mobile Network Code. This is the MNC for GSM and WCDMA; CDMA uses the System ID (SID).","type":"integer","format":"int32"},"radioType":{"description":"The mobile radio type. Supported values are lte, gsm, cdma, and wcdma. While this field is optional, it should be included if a value is available, for more accurate results.","type":"string"},"carrier":{"description":"The carrier name.","type":"string"},"considerIp":{"description":"Specifies whether to fall back to IP geolocation if wifi and cell tower signals are not available. Defaults to true. Set considerIp to false to disable fall back.","type":"string"},"cellTowers":{"description":"The request body's cellTowers array contains zero or more cell tower objects.","type":"array","items":{"$ref":"#/definitions/CellTower"}},"wifiAccessPoints":{"description":"An array of two or more WiFi access point objects.","type":"array","items":{"$ref":"#/definitions/WiFiAccessPoint"}}}},"GeolocationResponse":{"title":"GeolocationResponse","description":"A successful geolocation request will return a JSON-formatted response defining a location and radius.","example":{"location":{"lat":37.421925,"lng":-122.0841293},"accuracy":30},"type":"object","properties":{"location":{"$ref":"#/definitions/LatLngLiteral"},"accuracy":{"description":"The accuracy of the estimated location, in meters. This represents the radius of a circle around the given `location`. If your Geolocation response shows a very high value in the `accuracy` field, the service may be geolocating based on the  request IP, instead of WiFi points or cell towers. This can happen if no cell towers or access points are valid or recognized. To confirm that this is the issue, set `considerIp` to `false` in your request. If the response is a `404`, you've confirmed that your `wifiAccessPoints` and `cellTowers` objects could not be geolocated.","type":"number","format":"double"}},"required":["location","accuracy"]},"CellTower":{"title":"CellTower","description":"Attributes used to describe a cell tower. The following optional fields are not currently used, but may be included if values are available: `age`, `signalStrength`, `timingAdvance`.","type":"object","properties":{"cellId":{"description":"Unique identifier of the cell. On GSM, this is the Cell ID (CID); CDMA networks use the Base Station ID (BID). WCDMA networks use the UTRAN/GERAN Cell Identity (UC-Id), which is a 32-bit value concatenating the Radio Network Controller (RNC) and Cell ID. Specifying only the 16-bit Cell ID value in WCDMA networks may return inaccurate results.","type":"integer","format":"int32"},"locationAreaCode":{"description":"The Location Area Code (LAC) for GSM and WCDMA networks. The Network ID (NID) for CDMA networks.","type":"integer","format":"int32"},"mobileCountryCode":{"description":"The cell tower's Mobile Country Code (MCC).","type":"integer","format":"int32"},"mobileNetworkCode":{"description":"The cell tower's Mobile Network Code. This is the MNC for GSM and WCDMA; CDMA uses the System ID (SID).","type":"integer","format":"int32"},"age":{"description":"The number of milliseconds since this cell was primary. If age is 0, the cellId represents a current measurement.","type":"integer","format":"int32"},"signalStrength":{"description":"Radio signal strength measured in dBm.","type":"number","format":"double"},"timingAdvance":{"description":"The timing advance value.","type":"number","format":"double"}},"required":["cellId","locationAreaCode","mobileCountryCode","mobileNetworkCode"]},"WiFiAccessPoint":{"title":"WiFiAccessPoint","description":"Attributes used to describe a WiFi access point.","type":"object","properties":{"macAddress":{"description":"The MAC address of the WiFi node. It's typically called a BSS, BSSID or MAC address. Separators must be `:` (colon).","type":"string"},"signalStrength":{"description":"The current signal strength measured in dBm.","type":"integer","format":"int32"},"signalToNoiseRatio":{"description":"The current signal to noise ratio measured in dB.","type":"integer","format":"int32"},"age":{"description":"The number of milliseconds since this access point was detected.","type":"integer","format":"int32"},"channel":{"description":"The channel over which the client is communication with the access point.","type":"integer","format":"int32"}},"required":["macAddress"]},"NearestRoadsError":{"title":"NearestRoadsError","type":"object","properties":{"code":{"description":"This is the same as the HTTP status of the response.","type":"number","format":"double"},"message":{"description":"A short description of the error.","type":"string"},"status":{"description":"An error such as `INVALID_ARGUMENT`.","type":"string"}},"required":["code","message","status"]},"NearestRoadsErrorResponse":{"title":"NearestRoadsErrorResponse","type":"object","properties":{"error":{"$ref":"#/definitions/NearestRoadsError"}}},"NearestRoadsResponse":{"title":"NearestRoadsResponse","type":"object","properties":{"snappedPoints":{"description":"An array of snapped points.","type":"array","items":{"$ref":"#/definitions/SnappedPoint"}}}},"SnappedPoint":{"title":"SnappedPoint","type":"object","properties":{"location":{"$ref":"#/definitions/LatitudeLongitudeLiteral"},"originalIndex":{"description":"An integer that indicates the corresponding value in the original request. Each value in the request should map to a snapped value in the response. However, if you've set interpolate=true, then it's possible that the response will contain more coordinates than the request. Interpolated values will not have an `originalIndex`. These values are indexed from `0`, so a point with an originalIndex of `4` will be the snapped value of the 5th latitude/longitude passed to the path parameter.","type":"number","format":"double"},"placeId":{"description":"A unique identifier for a place. All place IDs returned by the Roads API correspond to road segments.","type":"string"}},"required":["location","placeId"]},"SnapToRoadsResponse":{"title":"SnapToRoadsResponse","type":"object","properties":{"snappedPoints":{"description":"An array of snapped points.","type":"array","items":{"$ref":"#/definitions/SnappedPoint"}},"warningMessage":{"description":"A string containing a user-visible warning.","type":"string"}}},"TimeZoneResponse":{"title":"TimeZoneResponse","type":"object","properties":{"dstOffset":{"description":"The offset for daylight-savings time in seconds. This will be zero if the time zone is not in Daylight Savings Time during the specified `timestamp`.","type":"number","format":"double"},"rawOffset":{"description":"The offset from UTC (in seconds) for the given location. This does not take into effect daylight savings.","type":"number","format":"double"},"timeZoneId":{"description":"a string containing the ID of the time zone, such as \"America/Los_Angeles\" or \"Australia/Sydney\". These IDs are defined by [Unicode Common Locale Data Repository (CLDR) project](http://cldr.unicode.org/), and currently available in file timezone.xml. When a timezone has several IDs, the canonical one is returned. In xml responses, this is the first alias of each timezone. For example, \"Asia/Calcutta\" is returned, not \"Asia/Kolkata\".","type":"string"},"timeZoneName":{"description":"The long form name of the time zone. This field will be localized if the language parameter is set. eg. `Pacific Daylight Time` or `Australian Eastern Daylight Time`.","type":"string"},"status":{"$ref":"#/definitions/TimeZoneStatus"},"errorMessage":{"description":"Detailed information about the reasons behind the given status code. Included if status other than `Ok`.","type":"string"}},"required":["status"]},"TimeZoneStatus":{"title":"TimeZoneStatus","description":"The `status` field within the Time Zone response object contains the status of the request. The `status` field may contain the following values:\n\n- `OK` indicates that the request was successful.\n- `INVALID_REQUEST` indicates that the request was malformed.\n- `OVER_DAILY_LIMIT` indicates any of the following:\n  - The API key is missing or invalid.\n  - Billing has not been enabled on your account.\n  - A self-imposed usage cap has been exceeded.\n  - The provided method of payment is no longer valid (for example, a credit card has expired).\n\n- `OVER_QUERY_LIMIT` indicates the requestor has exceeded quota.\n- `REQUEST_DENIED` indicates that the API did not complete the request. Confirm that the request was sent over HTTPS instead of HTTP.\n- `UNKNOWN_ERROR` indicates an unknown error.\n- `ZERO_RESULTS` indicates that no time zone data could be found for the specified position or time. Confirm that the request is for a location on land, and not over water.","type":"string","enum":["OK","INVALID_REQUEST","OVER_DAILY_LIMIT","OVER_QUERY_LIMIT","REQUEST_DENIED","UNKNOWN_ERROR","ZERO_RESULTS"]},"ErrorResponse":{"title":"ErrorResponse","description":"In the case of an error, a standard format error response body will be returned and the HTTP status code will be set to an error status. The response contains an object with a single error object.","example":{"error":{"code":400,"message":"API key not valid. Please pass a valid API key.","errors":[{"message":"API key not valid. Please pass a valid API key.","domain":"global","reason":"badRequest"}],"status":"INVALID_ARGUMENT","details":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","reason":"API_KEY_INVALID","domain":"googleapis.com","metadata":{"service":"geolocation.googleapis.com"}}]}},"type":"object","properties":{"error":{"$ref":"#/definitions/ErrorObject"}},"required":["error"]},"ErrorObject":{"title":"ErrorObject","type":"object","properties":{"code":{"description":"This is the same as the HTTP status of the response.","type":"number","format":"double"},"message":{"description":"A short description of the error.","type":"string"},"errors":{"description":"A list of errors which occurred. Each error contains an identifier for the type of error and a short description.","type":"array","items":{"$ref":"#/definitions/ErrorDetail"}},"status":{"description":"A status code that indicates the error type.","type":"string"},"details":{"description":"Additional details about the error.","type":"array","items":{"$ref":"#/definitions/ErrorDetail"}}},"required":["code","message","errors"]},"ErrorDetail":{"title":"ErrorDetail","example":{"message":"API key not valid. Please pass a valid API key.","domain":"global","reason":"badRequest"},"type":"object","properties":{"@type":{"description":"The type of error.","example":"type.googleapis.com/google.rpc.ErrorInfo","type":"string"},"message":{"description":"A short description of the error.","type":"string"},"reason":{"description":"A reason for the error.","type":"string"},"domain":{"description":"The domain in which the error occurred.","type":"string"},"metadata":{"description":"Additional metadata about the error.","type":"object"},"fieldViolations":{"description":"A list of field violations.","type":"array","items":{"$ref":"#/definitions/FieldViolation"}}}},"FieldViolation":{"title":"FieldViolation","type":"object","properties":{"field":{"description":"The name of the invalid field.","type":"string"},"description":{"description":"A short description of the error.","type":"string"}},"required":["field","description"]},"Place":{"title":"Place","description":"Attributes describing a place. Not all attributes will be available for all place types.","type":"object","properties":{"address_components":{"description":"An array containing the separate components applicable to this address.","type":"array","items":{"$ref":"#/definitions/AddressComponent"}},"adr_address":{"description":"A representation of the place's address in the [adr microformat](http://microformats.org/wiki/adr).","example":"<span class=\"street-address\">48 Pirrama Rd</span>, <span class=\"locality\">Pyrmont</span> <span class=\"region\">NSW</span> <span class=\"postal-code\">2009</span>, <span class=\"country-name\">Australia</span>","type":"string"},"business_status":{"$ref":"#/definitions/BusinessStatus"},"formatted_address":{"description":"A string containing the human-readable address of this place.\n\nOften this address is equivalent to the postal address. Note that some countries, such as the United Kingdom, do not allow distribution of true postal addresses due to licensing restrictions.\n\nThe formatted address is logically composed of one or more address components. For example, the address \"111 8th Avenue, New York, NY\" consists of the following components: \"111\" (the street number), \"8th Avenue\" (the route), \"New York\" (the city) and \"NY\" (the US state).\n\nDo not parse the formatted address programmatically. Instead you should use the individual address components, which the API response includes in addition to the formatted address field.","example":"48 Pirrama Rd, Pyrmont NSW 2009, Australia","type":"string"},"formatted_phone_number":{"description":"Contains the place's phone number in its [local format](http://en.wikipedia.org/wiki/Local_conventions_for_writing_telephone_numbers).","example":"(02) 9374 4000","type":"string"},"geometry":{"$ref":"#/definitions/Geometry"},"icon":{"description":"Contains the URL of a suggested icon which may be displayed to the user when indicating this result on a map.","example":"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png","type":"string"},"icon_background_color":{"description":"Contains the default HEX color code for the place's category.","type":"string"},"icon_mask_base_uri":{"description":"Contains the URL of a recommended icon, minus the `.svg` or `.png` file type extension.","type":"string"},"international_phone_number":{"description":"Contains the place's phone number in international format. International format includes the country code, and is prefixed with the plus, +, sign. For example, the international_phone_number for Google's Sydney, Australia office is `+61 2 9374 4000`.","example":"+61 2 9374 4000","type":"string"},"name":{"description":"Contains the human-readable name for the returned result. For `establishment` results, this is usually the canonicalized business name.","example":"Google Workplace 6","type":"string"},"opening_hours":{"$ref":"#/definitions/PlaceOpeningHours"},"permanently_closed":{"description":"Use `business_status` to get the operational status of businesses.","type":"boolean"},"photos":{"description":"An array of photo objects, each containing a reference to an image. A request may return up to ten photos. More information about place photos and how you can use the images in your application can be found in the [Place Photos](https://developers.google.com/maps/documentation/places/web-service/photos) documentation.","type":"array","items":{"$ref":"#/definitions/PlacePhoto"}},"place_id":{"description":"A textual identifier that uniquely identifies a place. To retrieve information about the place, pass this identifier in the `place_id` field of a Places API request. For more information about place IDs, see the [place ID overview](https://developers.google.com/maps/documentation/places/web-service/place-id).","example":"ChIJN1t_tDeuEmsRUsoyG83frY4","type":"string"},"plus_code":{"$ref":"#/definitions/PlusCode"},"price_level":{"description":"The price level of the place, on a scale of 0 to 4. The exact amount indicated by a specific value will vary from region to region. Price levels are interpreted as follows:\n- 0 Free\n- 1 Inexpensive\n- 2 Moderate\n- 3 Expensive\n- 4 Very Expensive","type":"number","format":"double"},"rating":{"description":"Contains the place's rating, from 1.0 to 5.0, based on aggregated user reviews.","example":4.1,"type":"number","format":"double"},"reference":{"type":"string"},"reviews":{"description":"A JSON array of up to five reviews. If a language parameter was specified in the request, the service will bias the results to prefer reviews written in that language.","type":"array","items":{"$ref":"#/definitions/PlaceReview"}},"scope":{"type":"string"},"types":{"description":"Contains an array of feature types describing the given result. See the list of [supported types](https://developers.google.com/maps/documentation/places/web-service/supported_types#table2).","example":["point_of_interest","establishment"],"type":"array","items":{"type":"string"}},"url":{"description":"Contains the URL of the official Google page for this place. This will be the Google-owned page that contains the best available information about the place. Applications must link to or embed this page on any screen that shows detailed results about the place to the user.","example":"https://maps.google.com/?cid=10281119596374313554","type":"string"},"user_ratings_total":{"description":"The total number of reviews, with or without text, for this place.","example":931,"type":"number","format":"double"},"utc_offset":{"description":"Contains the number of minutes this place‚Äôs current timezone is offset from UTC. For example, for places in Sydney, Australia during daylight saving time this would be 660 (+11 hours from UTC), and for places in California outside of daylight saving time this would be -480 (-8 hours from UTC).","example":600,"type":"number","format":"double"},"vicinity":{"description":"For establishment (`types:[\"establishment\", ...])` results only, the `vicinity` field contains a simplified address for the place, including the street name, street number, and locality, but not the province/state, postal code, or country.\n\nFor all other results, the `vicinity` field contains the name of the narrowest political (`types:[\"political\", ...]`) feature that is present in the address of the result.\n\nThis content is meant to be read as-is. Do not programmatically parse the formatted address.","example":"48 Pirrama Road, Pyrmont","type":"string"},"website":{"description":"The authoritative website for this place, such as a business' homepage.","example":"http://google.com","type":"string"}}},"PlaceAutocompleteMatchedSubstring":{"title":"PlaceAutocompleteMatchedSubstring","type":"object","properties":{"length":{"description":"Length of the matched substring in the prediction result text.","type":"number","format":"double"},"offset":{"description":"Start location of the matched substring in the prediction result text.","type":"number","format":"double"}},"required":["length","offset"]},"PlaceAutocompletePrediction":{"title":"PlaceAutocompletePrediction","type":"object","properties":{"description":{"description":"Contains the human-readable name for the returned result. For `establishment` results, this is usually the business name. This content is meant to be read as-is. Do not programmatically parse the formatted address.","example":"Paris, France","type":"string"},"matched_substrings":{"description":"A list of substrings that describe the location of the entered term in the prediction result text, so that the term can be highlighted if desired.","type":"array","items":{"$ref":"#/definitions/PlaceAutocompleteMatchedSubstring"}},"place_id":{"description":"A textual identifier that uniquely identifies a place. To retrieve information about the place, pass this identifier in the placeId field of a Places API request. For more information about place IDs, see the [Place IDs](https://developers.google.com/maps/documentation/places/web-service/place-id) overview.","type":"string"},"reference":{"description":"See place_id.","type":"string"},"structured_formatting":{"$ref":"#/definitions/PlaceAutocompleteStructuredFormat"},"terms":{"description":"Contains an array of terms identifying each section of the returned description (a section of the description is generally terminated with a comma). Each entry in the array has a `value` field, containing the text of the term, and an `offset` field, defining the start position of this term in the description, measured in Unicode characters.","type":"array","items":{"$ref":"#/definitions/PlaceAutocompleteTerm"}},"types":{"description":"Contains an array of types that apply to this place. For example: `[ \"political\", \"locality\" ]` or `[ \"establishment\", \"geocode\", \"beauty_salon\" ]`. The array can contain multiple values. Learn more about [Place types](https://developers.google.com/maps/documentation/places/web-service/supported_types).","type":"array","items":{"type":"string"}},"distance_meters":{"description":"The straight-line distance in meters from the origin. This field is only returned for requests made with an `origin`.","type":"integer","format":"int32"}},"required":["description","matched_substrings","structured_formatting","terms"]},"PlaceAutocompleteStructuredFormat":{"title":"PlaceAutocompleteStructuredFormat","type":"object","properties":{"main_text":{"description":"Contains the main text of a prediction, usually the name of the place.","type":"string"},"main_text_matched_substrings":{"description":"Contains an array with `offset` value and `length`. These describe the location of the entered term in the prediction result text, so that the term can be highlighted if desired.","type":"array","items":{"$ref":"#/definitions/PlaceAutocompleteMatchedSubstring"}},"secondary_text":{"description":"Contains the secondary text of a prediction, usually the location of the place.","type":"string"},"secondary_text_matched_substrings":{"description":"Contains an array with `offset` value and `length`. These describe the location of the entered term in the prediction result text, so that the term can be highlighted if desired.","type":"array","items":{"$ref":"#/definitions/PlaceAutocompleteMatchedSubstring"}}},"required":["main_text","main_text_matched_substrings","secondary_text"]},"PlaceAutocompleteTerm":{"title":"PlaceAutocompleteTerm","type":"object","properties":{"value":{"description":"The text of the term.","type":"string"},"offset":{"description":"Defines the start position of this term in the description, measured in Unicode characters","type":"number","format":"double"}},"required":["value","offset"]},"PlacePhoto":{"title":"PlacePhoto","description":"A photo of a Place. The photo can be accesed via the [Place Photo](https://developers.google.com/places/web-service/photos) API using an url in the following pattern:\n\n```\nhttps://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=photo_reference&key=YOUR_API_KEY\n```\n\nSee [Place Photos](https://developers.google.com/places/web-service/photos) for more information.","type":"object","properties":{"height":{"description":"The height of the photo.","type":"number","format":"double"},"width":{"description":"The width of the photo.","type":"number","format":"double"},"html_attributions":{"description":"The HTML attributions for the photo.","type":"array","items":{"type":"string"}},"photo_reference":{"description":"A string used to identify the photo when you perform a Photo request.","example":"Aap_uEDY1GahdnFHaMArH3g6W4bELCIn9yaZ0XGqh1-G2lX3OwzTExM6g-_0U8qedk5o3R1SmtMK-NMt34dDMcCNnc4DWREX0vQEH9DjvfF70ZPHo3IFbT-TU_oCNCCB3kxe36EsdXeoKEtRH74NueUIeslebZuVeteDpKvpwVqxRpZFVSjS","type":"string"}},"required":["height","width","html_attributions","photo_reference"]},"PlaceOpeningHours":{"title":"PlaceOpeningHours","description":"An object describing the opening hours of a place.","type":"object","properties":{"open_now":{"description":"A boolean value indicating if the place is open at the current time.","type":"boolean"},"periods":{"description":"An array of opening periods covering seven days, starting from Sunday, in chronological order.","type":"array","items":{"$ref":"#/definitions/PlaceOpeningHoursPeriod"}},"weekday_text":{"description":"An array of strings describing in human-readable text the hours of the place.","example":["Monday: 9:00 AM ‚Äì 5:00 PM","Tuesday: 9:00 AM ‚Äì 5:00 PM","Wednesday: 9:00 AM ‚Äì 5:00 PM","Thursday: 9:00 AM ‚Äì 5:00 PM","Friday: 9:00 AM ‚Äì 5:00 PM","Saturday: Closed","Sunday: Closed"],"type":"array","items":{"type":"string"}}}},"PlaceOpeningHoursPeriod":{"title":"PlaceOpeningHoursPeriod","type":"object","properties":{"open":{"$ref":"#/definitions/PlaceOpeningHoursPeriodDetail"},"close":{"$ref":"#/definitions/PlaceOpeningHoursPeriodDetail"}},"required":["open"]},"PlaceOpeningHoursPeriodDetail":{"title":"PlaceOpeningHoursPeriodDetail","type":"object","properties":{"day":{"description":"A number from 0‚Äì6, corresponding to the days of the week, starting on Sunday. For example, 2 means Tuesday.","type":"number","format":"double"},"time":{"description":"May contain a time of day in 24-hour hhmm format. Values are in the range 0000‚Äì2359. The time will be reported in the place‚Äôs time zone.","example":"1700","type":"string"}},"required":["day","time"]},"PlaceReview":{"title":"PlaceReview","description":"A review of the place submitted by a user.","type":"object","properties":{"author_name":{"description":"The name of the user who submitted the review. Anonymous reviews are attributed to \"A Google user\".","example":"A Google User","type":"string"},"author_url":{"description":"The URL to the user's Google Maps Local Guides profile, if available.","type":"string"},"profile_photo_url":{"description":"The URL to the user's profile photo, if available.","type":"string"},"language":{"description":"An IETF language code indicating the language used in the user's review. This field contains the main language tag only, and not the secondary tag indicating country or region. For example, all the English reviews are tagged as 'en', and not 'en-AU' or 'en-UK' and so on.","type":"string"},"rating":{"description":"The user's overall rating for this place. This is a whole number, ranging from 1 to 5.","type":"number","format":"double"},"relative_time_description":{"description":"The time that the review was submitted in text, relative to the current time.","type":"string"},"text":{"description":"The user's review. When reviewing a location with Google Places, text reviews are considered optional. Therefore, this field may be empty. Note that this field may include simple HTML markup. For example, the entity reference `&amp;` may represent an ampersand character.","type":"string"},"time":{"description":"The time that the review was submitted, measured in the number of seconds since since midnight, January 1, 1970 UTC.","type":"number","format":"double"}},"required":["author_name","rating","relative_time_description","time"]},"PlacesAutocompleteResponse":{"title":"PlacesAutocompleteResponse","type":"object","properties":{"predictions":{"description":"Contains an array of predictions.","type":"array","items":{"$ref":"#/definitions/PlaceAutocompletePrediction"}},"status":{"$ref":"#/definitions/PlacesAutocompleteStatus"},"error_message":{"description":"When the service returns a status code other than `OK<`, there may be an additional `error_message` field within the response object. This field contains more detailed information about thereasons behind the given status code. This field is not always returned, and its content is subject to change.","type":"string"},"info_messages":{"description":"When the service returns additional information about the request specification, there may be an additional `info_messages` field within the response object. This field is only returned for successful requests. It may not always be returned, and its content is subject to change.","type":"array","items":{"type":"string"}}},"required":["predictions","status"]},"PlacesAutocompleteStatus":{"title":"PlacesAutocompleteStatus","description":"Status codes returned by service.\n- `OK` indicating the API request was successful.\n- `ZERO_RESULTS` indicating that the search was successful but returned no results. This may occur if the search was passed a bounds in a remote location.\n- `INVALID_REQUEST` indicating the API request was malformed, generally due to the missing `input` parameter.\n- `OVER_QUERY_LIMIT` indicating any of the following:\n  - You have exceeded the QPS limits.\n  - Billing has not been enabled on your account.\n  - The monthly $200 credit, or a self-imposed usage cap, has been exceeded.\n  - The provided method of payment is no longer valid (for example, a credit card has expired).\n  See the [Maps FAQ](https://developers.google.com/maps/faq#over-limit-key-error) for more information about how to resolve this error.\n- `REQUEST_DENIED` indicating that your request was denied, generally because:\n  - The request is missing an API key.\n  - The `key` parameter is invalid.\n- `UNKNOWN_ERROR` indicating an unknown error.","type":"string","enum":["OK","ZERO_RESULTS","INVALID_REQUEST","OVER_QUERY_LIMIT","REQUEST_DENIED","UNKNOWN_ERROR"]},"PlacesDetailsResponse":{"title":"PlacesDetailsResponse","type":"object","properties":{"html_attributions":{"description":"May contain a set of attributions about this listing which must be displayed to the user (some listings may not have attribution).","type":"array","items":{"type":"string"}},"result":{"$ref":"#/definitions/Place"},"status":{"$ref":"#/definitions/PlacesDetailsStatus"},"info_messages":{"description":"When the service returns additional information about the request specification, there may be an additional `info_messages` field within the response object. This field is only returned for successful requests. It may not always be returned, and its content is subject to change.","type":"array","items":{"type":"string"}}},"required":["html_attributions","result","status"]},"PlacesDetailsStatus":{"title":"PlacesDetailsStatus","description":"Status codes returned by service.\n- `OK` indicating the API request was successful.\n- `ZERO_RESULTS` indicating that the referenced location, `place_id`, was valid but no longer refers to a valid result. This may occur if the establishment is no longer in business. \n- `NOT_FOUND` indicating that that the referenced location, `place_id`, was not found in the Places database. \n- `INVALID_REQUEST` indicating the API request was malformed.\n- `OVER_QUERY_LIMIT` indicating any of the following:\n  - You have exceeded the QPS limits.\n  - Billing has not been enabled on your account.\n  - The monthly $200 credit, or a self-imposed usage cap, has been exceeded.\n  - The provided method of payment is no longer valid (for example, a credit card has expired).\n  See the [Maps FAQ](https://developers.google.com/maps/faq#over-limit-key-error) for more information about how to resolve this error.\n- `REQUEST_DENIED` indicating that your request was denied, generally because:\n  - The request is missing an API key.\n  - The `key` parameter is invalid.\n- `UNKNOWN_ERROR` indicating an unknown error.","type":"string","enum":["OK","ZERO_RESULTS","INVALID_REQUEST","NOT_FOUND","OVER_QUERY_LIMIT","REQUEST_DENIED","UNKNOWN_ERROR"]},"PlacesFindPlaceFromTextResponse":{"title":"PlacesFindPlaceFromTextResponse","type":"object","properties":{"candidates":{"description":"Contains an array of Place candidates.\n<div class=\"caution\">Place Search requests return a subset of the fields that are returned by Place Details requests. If the field you want is not returned by Place Search, you can use Place Search to get a place_id, then use that Place ID to make a Place Details request.</div>","type":"array","items":{"$ref":"#/definitions/Place"}},"status":{"$ref":"#/definitions/PlacesSearchStatus"},"error_message":{"description":"When the service returns a status code other than `OK<`, there may be an additional `error_message` field within the response object. This field contains more detailed information about thereasons behind the given status code. This field is not always returned, and its content is subject to change.","example":"Error while parsing 'fields' parameter: Unsupported field name 'invalid'. ","type":"string"},"info_messages":{"description":"When the service returns additional information about the request specification, there may be an additional `info_messages` field within the response object. This field is only returned for successful requests. It may not always be returned, and its content is subject to change.","type":"array","items":{"type":"string"}}},"required":["candidates","status"]},"PlacesNearbySearchResponse":{"title":"PlacesNearbySearchResponse","type":"object","properties":{"html_attributions":{"description":"May contain a set of attributions about this listing which must be displayed to the user (some listings may not have attribution).","type":"array","items":{"type":"string"}},"results":{"description":"Contains an array of places.\n<div class=\"caution\">Place Search requests return a subset of the fields that are returned by Place Details requests. If the field you want is not returned by Place Search, you can use Place Search to get a `place_id`, then use that Place ID to make a Place Details request.</div>","type":"array","items":{"$ref":"#/definitions/Place"}},"status":{"$ref":"#/definitions/PlacesSearchStatus"},"error_message":{"description":"When the service returns a status code other than `OK<`, there may be an additional `error_message` field within the response object. This field contains more detailed information about thereasons behind the given status code. This field is not always returned, and its content is subject to change.","type":"string"},"info_messages":{"description":"When the service returns additional information about the request specification, there may be an additional `info_messages` field within the response object. This field is only returned for successful requests. It may not always be returned, and its content is subject to change.","type":"array","items":{"type":"string"}},"next_page_token":{"description":"Contains a token that can be used to return up to 20 additional results. A next_page_token will not be returned if there are no additional results to display. The maximum number of results that can be returned is 60. There is a short delay between when a next_page_token is issued, and when it will become valid.","type":"string"}},"required":["html_attributions","results","status"]},"PlacesQueryAutocompleteResponse":{"title":"PlacesQueryAutocompleteResponse","type":"object","properties":{"predictions":{"description":"Contains an array of predictions.","type":"array","items":{"$ref":"#/definitions/PlaceAutocompletePrediction"}},"status":{"$ref":"#/definitions/PlacesAutocompleteStatus"},"error_message":{"description":"When the service returns a status code other than `OK`, there may be an additional `error_message` field within the response object. This field contains more detailed information about thereasons behind the given status code. This field is not always returned, and its content is subject to change.","type":"string"},"info_messages":{"description":"When the service returns additional information about the request specification, there may be an additional `info_messages` field within the response object. This field is only returned for successful requests. It may not always be returned, and its content is subject to change.","type":"array","items":{"type":"string"}}},"required":["predictions","status"]},"PlacesSearchStatus":{"title":"PlacesSearchStatus","description":"Status codes returned by service.\n- `OK` indicating the API request was successful.\n- `ZERO_RESULTS` indicating that the search was successful but returned no results. This may occur if the search was passed a `latlng` in a remote location.\n- `INVALID_REQUEST` indicating the API request was malformed, generally due to missing required query parameter (`location` or `radius`).\n- `OVER_QUERY_LIMIT` indicating any of the following:\n  - You have exceeded the QPS limits.\n  - Billing has not been enabled on your account.\n  - The monthly $200 credit, or a self-imposed usage cap, has been exceeded.\n  - The provided method of payment is no longer valid (for example, a credit card has expired).\n  See the [Maps FAQ](https://developers.google.com/maps/faq#over-limit-key-error) for more information about how to resolve this error.\n- `REQUEST_DENIED` indicating that your request was denied, generally because:\n  - The request is missing an API key.\n  - The `key` parameter is invalid.\n- `UNKNOWN_ERROR` indicating an unknown error.","type":"string","enum":["OK","ZERO_RESULTS","INVALID_REQUEST","OVER_QUERY_LIMIT","REQUEST_DENIED","UNKNOWN_ERROR"]},"PlacesTextSearchResponse":{"title":"PlacesTextSearchResponse","type":"object","properties":{"html_attributions":{"description":"May contain a set of attributions about this listing which must be displayed to the user (some listings may not have attribution).","type":"array","items":{"type":"string"}},"results":{"description":"Contains an array of places.\n<div class=\"caution\">Place Search requests return a subset of the fields that are returned by Place Details requests. If the field you want is not returned by Place Search, you can use Place Search to get a `place_id`, then use that Place ID to make a Place Details request.</div>","type":"array","items":{"$ref":"#/definitions/Place"}},"status":{"$ref":"#/definitions/PlacesSearchStatus"},"error_message":{"description":"When the service returns a status code other than `OK<`, there may be an additional `error_message` field within the response object. This field contains more detailed information about thereasons behind the given status code. This field is not always returned, and its content is subject to change.","type":"string"},"info_messages":{"description":"When the service returns additional information about the request specification, there may be an additional `info_messages` field within the response object. This field is only returned for successful requests. It may not always be returned, and its content is subject to change.","type":"array","items":{"type":"string"}},"next_page_token":{"description":"Contains a token that can be used to return up to 20 additional results. A next_page_token will not be returned if there are no additional results to display. The maximum number of results that can be returned is 60. There is a short delay between when a next_page_token is issued, and when it will become valid.","type":"string"}},"required":["html_attributions","results","status"]},"StreetViewStatus":{"title":"StreetViewStatus","description":"The `status` field within the Streetview Metadata response object contains the status of the request. The `status` field may contain the following values:\n\n- `OK` indicates that no errors occurred; a panorama is found and metadata is returned.\n- `INVALID_REQUEST` indicates that the request was malformed.\n- `NOT_FOUND` indicates that the address string provided in the `location` parameter could not be found. This may occur if a non-existent address is given.\n- `ZERO_RESULTS` indicates that no panorama could be found near the provided location. This may occur if a non-existent or invalid `pano` id is given.\n- `OVER_QUERY_LIMIT` indicates the requestor has exceeded quota.\n- `REQUEST_DENIED` indicates that your request was denied. This may occur if you did not [authorize](https://developers.google.com/maps/documentation/streetview/get-api-key) your request, or if the Street View Static API is not activated in the Google Cloud Console project containing your API key.\n- `UNKNOWN_ERROR` indicates that the request could not be processed due to a server error. This is often a temporary status. The request may succeed if you try again","type":"string","enum":["OK","INVALID_REQUEST","NOT_FOUND","ZERO_RESULTS","OVER_QUERY_LIMIT","REQUEST_DENIED","UNKNOWN_ERROR"]},"StreetViewResponse":{"title":"StreetViewResponse","type":"object","properties":{"copyright":{"description":"An array of snapped points.","type":"string"},"date":{"description":"A string indicating year and month that the panorama was captured.","type":"string"},"location":{"$ref":"#/definitions/LatLngLiteral"},"pano_id":{"description":"A specific panorama ID. These are generally stable, though panoramas may change ID over time as imagery is refreshed.","example":"tu510ie_z4ptBZYo2BGEJg","type":"string"},"status":{"$ref":"#/definitions/StreetViewStatus"}},"required":["status"]},"BusinessStatus":{"title":"BusinessStatus","description":"Indicates the operational status of the place, if it is a business. If no data exists, `business_status` is not returned.","type":"string","enum":["OPERATIONAL","CLOSED_TEMPORARILY","CLOSED_PERMANENTLY"]},"GeocoderStatus":{"title":"GeocoderStatus","description":"Indicates the status code resulting from the geocoding operation. This field may contain the following values.","type":"string","enum":["OK","ZERO_RESULTS"]},"inputtype":{"title":"inputtype","type":"string","enum":["textquery","phonenumber"]},"language":{"title":"language","type":"string","enum":["ar","bg","bn","ca","cs","da","de","el","en","en-AU","en-GB","es","eu","fa","fi","fil","fr","gl","gu","hi","hr","hu","id","it","iw","ja","kn","ko","lt","lv","ml","mr","nl","no","pl","pt","pt-BR","pt-PT","ro","ru","sk","sl","sr","sv","ta","te","th","tl","tr","uk","vi","zh-CN","zh-TW"]},"LocationType":{"title":"LocationType","description":"Stores additional data about the specified location. The following values are currently supported:\n\n- \"ROOFTOP\" indicates that the returned result is a precise geocode for which we have location information accurate down to street address precision.\n- \"RANGE_INTERPOLATED\" indicates that the returned result reflects an approximation (usually on a road) interpolated between two precise points (such as intersections). Interpolated results are generally returned when rooftop geocodes are unavailable for a street address.\n- \"GEOMETRIC_CENTER\" indicates that the returned result is the geometric center of a result such as a polyline (for example, a street) or polygon (region).\n- \"APPROXIMATE\" indicates that the returned result is approximate.","type":"string","enum":["ROOFTOP","RANGE_INTERPOLATED","GEOMETRIC_CENTER","APPROXIMATE"]},"Maneuver":{"title":"Maneuver","description":"Contains the action to take for the current step (turn left, merge, straight, etc.). Values are subject to change, and new values may be introduced without prior notice.","type":"string","enum":["turn-slight-left","turn-sharp-left","turn-left","turn-slight-right","turn-sharp-right","keep-right","keep-left","uturn-left","uturn-right","turn-right","straight","ramp-left","ramp-right","merge","fork-left","fork-right","ferry","ferry-train","roundabout-left","roundabout-right"]},"maxprice":{"title":"maxprice","type":"integer","format":"int32","enum":["0","1","2","3","4"]},"minprice":{"title":"minprice","type":"integer","format":"int32","enum":["0","1","2","3","4"]},"rankby":{"title":"rankby","type":"string","enum":["prominence","distance"]},"region":{"title":"region","type":"string","enum":["ac","ad","ae","af","ag","ai","al","am","an","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bl","bm","bn","bo","bq","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","en","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mf","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tp","tr","tt","tv","tw","tz","ua","ug","uk","um","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"]},"Type":{"title":"Type","type":"string","enum":["administrative_area_level_1","administrative_area_level_2","administrative_area_level_3","administrative_area_level_4","administrative_area_level_5","amusement_park","airport","colloquial_area","country","establishment","intersection","locality","natural_feature","neighborhood","park","plus_code","point_of_interest","political","postal_code","premise","route","street_address","sublocality","sublocality_level_1","subpremise","tourist_attraction","train_station","transit_station"]},"Type1":{"title":"Type1","description":"The type of vehicle used.\n\n* `BUS` -\tBus.\n* `CABLE_CAR` -\tA vehicle that operates on a cable, usually on the ground. Aerial cable cars may be of the type GONDOLA_LIFT.\n* `COMMUTER_TRAIN` -\tCommuter rail.\n* `FERRY` -\tFerry.\n* `FUNICULAR` -\tA vehicle that is pulled up a steep incline by a cable. A Funicular typically consists of two cars, with each car acting as a counterweight for the other.\n* `GONDOLA_LIFT` -\tAn aerial cable car.\n* `HEAVY_RAIL` -\tHeavy rail.\n* `HIGH_SPEED_TRAIN` -\tHigh speed train.\n* `INTERCITY_BUS` -\tIntercity bus.\n* `LONG_DISTANCE_TRAIN` -\tLong distance train.\n* `METRO_RAIL` -\tLight rail transit.\n* `MONORAIL` -\tMonorail.\n* `OTHER` -\tAll other vehicles will return this type.\n* `RAIL` -\tRail.\n* `SHARE_TAXI` -\tShare taxi is a kind of bus with the ability to drop off and pick up passengers anywhere on its route.\n* `SUBWAY` -\tUnderground light rail.\n* `TRAM` -\tAbove ground light rail.\n* `TROLLEYBUS` -\tTrolleybus.","type":"string","enum":["BUS","CABLE_CAR","COMMUTER_TRAIN","FERRY","FUNICULAR","GONDOLA_LIFT","HEAVY_RAIL","HIGH_SPEED_TRAIN","INTERCITY_BUS","LONG_DISTANCE_TRAIN","METRO_RAIL","MONORAIL","OTHER","RAIL","SHARE_TAXI","SUBWAY","TRAM","TROLLEYBUS"]}},"parameters":{},"responses":{},"securityDefinitions":{"ApiKeyAuth":{"type":"apiKey","name":"key","in":"query"}},"security":[{"ApiKeyAuth":[]}],"tags":[{"name":"Directions","description":"The Directions API is a web service that uses an HTTP request to return JSON or XML-formatted directions between locations. You can receive directions for several modes of transportation, such as transit, driving, walking, or cycling.","externalDocs":{"url":"https://developers.google.com/maps/documentation/directions/overview"}},{"name":"Distance Matrix","description":"The Distance Matrix API is a service that provides travel distance and time for a matrix of origins and destinations.","externalDocs":{"url":"https://developers.google.com/maps/documentation/distance-matrix/overview"}},{"name":"Elevation","description":"The Elevation API provides a simple interface to query locations on the earth for elevation data. Additionally, you may request sampled elevation data along paths, allowing you to calculate elevation changes along routes.","externalDocs":{"url":"https://developers.google.com/maps/documentation/elevation/overview"}},{"name":"Geocoding","description":"The Geocoding API is a service that provides geocoding and reverse geocoding of addresses.","externalDocs":{"url":"https://developers.google.com/maps/documentation/geocoding/overview"}},{"name":"Geolocation","description":"The Geolocation API returns a location and accuracy radius based on information about cell towers and WiFi nodes that the mobile client can detect.","externalDocs":{"url":"https://developers.google.com/maps/documentation/geolocation/overview"}},{"name":"Roads","description":"The Roads API identifies the roads a vehicle was traveling along and provides additional metadata about those roads, such as speed limits.","externalDocs":{"url":"https://developers.google.com/maps/documentation/roads/overview"}},{"name":"Time Zone","description":"The Time Zone API provides a simple interface to request the time zone for locations on the surface of the earth, as well as the time offset from UTC for each of those locations.","externalDocs":{"url":"https://developers.google.com/maps/documentation/timezone/overview"}},{"name":"Street View","description":"The Street View API provides a simple interface to retrieve Street View images.","externalDocs":{"url":"https://developers.google.com/maps/documentation/streetview/overview"}},{"name":"Places","description":"The Places API is a service that returns information about places using HTTP requests. Places are defined within this API as establishments, geographic locations, or prominent points of interest.","externalDocs":{"url":"https://developers.google.com/maps/documentation/places/web-service/overview"}},{"name":"Places API","description":""}]}